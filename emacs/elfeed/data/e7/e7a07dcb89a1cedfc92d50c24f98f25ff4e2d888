<p>I just published the latest stable release of <a href="https://protesilaos.com/emacs/modus-themes">the Modus
themes</a>.  The change log
entry is reproduced below.  For any questions, feel welcome to <a href="https://protesilaos.com/contact/">contact
me</a>.</p>

<p>I will now prepare the patch for emacs.git which will then trickle down
to GNU ELPA (the <code class="language-plaintext highlighter-rouge">modus-themes</code> is a <code class="language-plaintext highlighter-rouge">:core</code> package).  Thank you for
your patience!</p>

<hr />

<h2>2.5.0</h2>

<p>This entry documents the changes made to the project since the
publication of version 2.4.0 on 2022-06-01.  It spans more than 60
commits to an already stable project.</p>

<p>The <code class="language-plaintext highlighter-rouge">modus-operandi</code> and <code class="language-plaintext highlighter-rouge">modus-vivendi</code> themes are built into Emacs-28
(latest stable release) or later, and are available on GNU ELPA as well
as other archives.  Emacs-28 ships version 1.6.0, while the current
<code class="language-plaintext highlighter-rouge">master</code> branch (i.e. Emacs-29) and, by extension, GNU ELPA include the
latest tagged release.  The packaged version is available as
<code class="language-plaintext highlighter-rouge">modus-themes</code>.</p>

<p>Read the manual inside Emacs by evaluating:</p>

<div class="language-elisp highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="p">(</span><span class="nv">info</span> <span class="s">"(modus-themes) Top"</span><span class="p">)</span>
</code></pre></div></div>

<p>Or visit: <a href="https://protesilaos.com/emacs/modus-themes">https://protesilaos.com/emacs/modus-themes</a> (the website only
documents the latest version).</p>

<h3>Enhancement to the user option ‘modus-themes-headings’</h3>

<p>The user option <code class="language-plaintext highlighter-rouge">modus-themes-headings</code> now reads a level 0 heading in
addition to numbers 1–8.  Heading 0 accepts the same list of properties
as all other levels (please consult the doc string of the user option or
the corresponding entry in the manual).  Currently only the value of the
Org #+title is affected (face is <code class="language-plaintext highlighter-rouge">org-document-title</code>), but we may cover
more faces if needed.</p>

<p>Sample configuration:</p>

<div class="language-elisp highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1">;; The `modus-themes-headings' is an alist with lots of possible</span>
<span class="c1">;; combinations, including per-heading-level tweaks: read the</span>
<span class="c1">;; manual or its doc string.</span>
<span class="p">(</span><span class="k">setq</span> <span class="nv">modus-themes-headings</span>
      <span class="o">'</span><span class="p">((</span><span class="mi">0</span> <span class="o">.</span> <span class="p">(</span><span class="nv">variable-pitch</span> <span class="nv">light</span> <span class="p">(</span><span class="nv">height</span> <span class="mf">2.2</span><span class="p">)))</span>
        <span class="p">(</span><span class="mi">1</span> <span class="o">.</span> <span class="p">(</span><span class="nv">rainbow</span> <span class="nv">variable-pitch</span> <span class="nv">light</span> <span class="p">(</span><span class="nv">height</span> <span class="mf">1.6</span><span class="p">)))</span>
        <span class="p">(</span><span class="mi">2</span> <span class="o">.</span> <span class="p">(</span><span class="nv">rainbow</span> <span class="nv">variable-pitch</span> <span class="nv">light</span> <span class="p">(</span><span class="nv">height</span> <span class="mf">1.4</span><span class="p">)))</span>
        <span class="p">(</span><span class="mi">3</span> <span class="o">.</span> <span class="p">(</span><span class="nv">rainbow</span> <span class="nv">variable-pitch</span> <span class="nv">regular</span> <span class="p">(</span><span class="nv">height</span> <span class="mf">1.3</span><span class="p">)))</span>
        <span class="p">(</span><span class="mi">4</span> <span class="o">.</span> <span class="p">(</span><span class="nv">rainbow</span> <span class="nv">regular</span> <span class="p">(</span><span class="nv">height</span> <span class="mf">1.2</span><span class="p">)))</span>
        <span class="p">(</span><span class="mi">5</span> <span class="o">.</span> <span class="p">(</span><span class="nv">rainbow</span> <span class="p">(</span><span class="nv">height</span> <span class="mf">1.1</span><span class="p">)))</span>
        <span class="p">(</span><span class="no">t</span> <span class="o">.</span> <span class="p">(</span><span class="nv">variable-pitch</span> <span class="nv">extrabold</span><span class="p">)))</span>
</code></pre></div></div>

<p>Given this change, I am also tweaking the default foreground value of
the <code class="language-plaintext highlighter-rouge">org-document-title</code>.  It is a bit more saturated than before, but
remains close to the spirit of the previous one.</p>

<p>Thanks to Rudolf Adamkovič for proposing the idea on the mailing list:
<a href="https://lists.sr.ht/~protesilaos/modus-themes/%3Cm2y1x5tewl.fsf@me.com%3E">https://lists.sr.ht/~protesilaos/modus-themes/%3Cm2y1x5tewl.fsf@me.com%3E</a>.</p>

<h3>Stylistic tweak to the user option ‘modus-themes-syntax’</h3>

<p>Prevented the <code class="language-plaintext highlighter-rouge">alt-syntax</code> property from desaturating the effect of the
<code class="language-plaintext highlighter-rouge">yellow-comments</code> property when the two would be combined.  Such as:</p>

<div class="language-elisp highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="p">(</span><span class="k">setq</span> <span class="nv">modus-themes-syntax</span> <span class="o">'</span><span class="p">(</span><span class="nv">alt-syntax</span> <span class="nv">yellow-comments</span><span class="p">))</span>
</code></pre></div></div>

<p>The previous design was incorrect because it was always using the faint
variant of the yellow comments, as if the user had specified:</p>

<div class="language-elisp highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="p">(</span><span class="k">setq</span> <span class="nv">modus-themes-syntax</span> <span class="o">'</span><span class="p">(</span><span class="nv">alt-syntax</span> <span class="nv">faint</span> <span class="nv">yellow-comments</span><span class="p">))</span>
</code></pre></div></div>

<p>[ Read the doc string of <code class="language-plaintext highlighter-rouge">modus-themes-syntax</code> or the manual for an
  explanation of all properties and their combinations. ]</p>

<h3>Review of the Isearch (and related) colours</h3>

<p>Emacs’ standard search has a face for the currently matched query and
all its inactive matches.  The faces are <code class="language-plaintext highlighter-rouge">isearch</code> and <code class="language-plaintext highlighter-rouge">lazy-highlight</code>,
respectively.  Before, we were using a green background by default for
the <code class="language-plaintext highlighter-rouge">isearch</code> face and a cyan background for the <code class="language-plaintext highlighter-rouge">lazy-highlight</code>.  This
was a choice that was made in the early days of the project when the
palette was not yet fully realised.</p>

<p>Green and cyan do not always contrast well side-by-side (subject to
hardware capabilities and environmental lighting), so the <code class="language-plaintext highlighter-rouge">isearch</code> face
also had an added bold weight.  This was not my preference, but it was
necessary under the circumstances.  The previous combinations were also
not ideal when the user option <code class="language-plaintext highlighter-rouge">modus-themes-deuteranopia</code> was set to a
non-nil value: the blue background which was used instead of the green
one could be conflated with the subtle teal of the <code class="language-plaintext highlighter-rouge">lazy-highlight</code>
under certain circumstances, such as poor colour reproduction at the
monitor level or in terminal emulators with limited colour support.</p>

<p>The new colours (intense yellow for active matches and subtle cyan for
lazy ones) are complementary, meaning that they are naturally easy to
tell apart.</p>

<p>[ Read “Colour theory and techniques used in the Modus themes”:
  <a href="https://protesilaos.com/codelog/2022-04-21-modus-themes-colour-theory/">https://protesilaos.com/codelog/2022-04-21-modus-themes-colour-theory/</a> ]</p>

<p>These specific hues are also well-suited for users with red-green colour
deficiency: yellow stays as-is, while the cyan colour becomes a bit more
grey though remains distinct.  As such, we do not need to run the helper
function <code class="language-plaintext highlighter-rouge">modus-themes--deuteran</code> to set the style based on the value of
<code class="language-plaintext highlighter-rouge">modus-themes-deuteranopia</code>.</p>

<p>The new colours do not clash with the style of the relevant <code class="language-plaintext highlighter-rouge">match</code> face
(used by <code class="language-plaintext highlighter-rouge">M-x occur</code>, <code class="language-plaintext highlighter-rouge">M-x grep</code>, and related), nor with the various
permutations of the <code class="language-plaintext highlighter-rouge">region</code> face (subject to the user option
<code class="language-plaintext highlighter-rouge">modus-themes-region</code>).</p>

<p>Finally, the bold weight has been removed from the <code class="language-plaintext highlighter-rouge">isearch</code> face.  It
was always a kludge.  Also, it would make paragraphs rendered in the
<code class="language-plaintext highlighter-rouge">variable-pitch</code> face (or proportional fonts in general) jump around as
the user would move between the matches, because bold letters occupy
more space than their regular weight counterparts so they affect the
length of the line.  This problem was reported by Augusto Stoffel on the
mailing list: <a href="https://lists.sr.ht/~protesilaos/modus-themes/%3C87sfnbswe9.fsf@gmail.com%3E">https://lists.sr.ht/~protesilaos/modus-themes/%3C87sfnbswe9.fsf@gmail.com%3E</a>.</p>

<h3>Rewrote parts of the colour preview commands</h3>

<p>The <code class="language-plaintext highlighter-rouge">modus-themes-list-colors</code>, <code class="language-plaintext highlighter-rouge">modus-themes-list-colors-current</code> are
commands that produce a buffer which shows previews of every entry in
the palette.  Their code has been simplified and they now produce a
warning when the display terminal has limited colour support.
Furthermore, they read any overrides as specified in the user options
<code class="language-plaintext highlighter-rouge">modus-themes-operandi-color-overrides</code>, <code class="language-plaintext highlighter-rouge">modus-themes-vivendi-color-overrides</code>.</p>

<h3>The “summertime” re-spin of colour overrides</h3>

<p>The manual now includes a complete hand-crafted example of a pair of
themes that override the default palette.  This is done as a technology
demonstration.  It is not considered an “official” extension of the
Modus themes and will never be part of the code base as it does not
conform with our lofty accessibility standards.  However, I took great
care in picking the colour overrides in the hope that users will (i)
have a usable theme, should they opt for it, and (ii) they recognise the
potential of our colour-overriding feature.</p>

<p>Screenshots and related information:
<a href="https://protesilaos.com/codelog/2022-07-26-modus-themes-color-override-demo/">https://protesilaos.com/codelog/2022-07-26-modus-themes-color-override-demo/</a>.</p>

<p>Thanks to user “Summer Emacs” for (i) suggesting the name “summertime”,
(ii) testing variants of this in her setup, and (iii) sending me
feedback on possible tweaks and refinements. All errors are my own.</p>

<p>The idea for this project came from an exchange where Summer discovered
an old theme of mine (from my pre-Emacs days) and asked if I had
anything like it for Emacs.  Voilà!</p>

<p>[ This information is shared with permission. ]</p>

<p>As for whether I have more plans… “Perhaps!” ;)</p>

<h3>Removed support for certain packages or face groups</h3>

<p>I periodically install and use the packages we support to see if they
have any updates we need to cover but also to confirm that they work.
Usually, the user does not learn about this work, as I don’t need to
make any changes or will make some minor tweaks.  When I think that the
package is not in a good shape, I remove it from the list of explicitly
supported packages, meaning that the modus-themes no longer cover the
faces it defines.  The removal of any package is done on a case-by-case
basis.  If you disagree with this decision, please inform me about and I
shall reconsider.</p>

<ul>
  <li>
    <p>centaur-tabs :: Those of you who have been reading these release notes
are aware of a bug in centaur-tabs which basically prevents us from
using the standard <code class="language-plaintext highlighter-rouge">:inherit</code> attribute to style the centaur-tabs
faces.  I have sent a patch to fix it, but have received no response
since February: <a href="https://github.com/ema2159/centaur-tabs/pull/179">https://github.com/ema2159/centaur-tabs/pull/179</a>.
To me, this gives the package the “unmaintained” status, though I am
happy to revert the change as soon as it gets the maintenance it
needs.</p>

    <p>Relevant reports (and I got many others in my private inbox):</p>

    <ul>
      <li><a href="https://github.com/protesilaos/modus-themes/issues/30">https://github.com/protesilaos/modus-themes/issues/30</a></li>
      <li><a href="https://gitlab.com/protesilaos/modus-themes/-/issues/288">https://gitlab.com/protesilaos/modus-themes/-/issues/288</a></li>
      <li><a href="https://github.com/protesilaos/modus-themes/issues/15">https://github.com/protesilaos/modus-themes/issues/15</a></li>
    </ul>
  </li>
  <li>
    <p>cursor-flash :: its default face should be visible enough.</p>
  </li>
  <li>
    <p>dynamic-ruler :: The package does not build on my Emacs 29.  Also, its
default faces are usable even without our recolouring.</p>
  </li>
  <li>
    <p>emacs-dashboard :: Its default faces inherit from basic faces that we
already support.</p>
  </li>
  <li>
    <p>frog-menu :: I have not seen this package being used anywhere.  I
suspect it is because it has not found a niche between transient,
hydra, and embark.</p>
  </li>
  <li>
    <p>mct :: A few months ago I announced that its development is
discontinued.  Either use vertico or switch to what Emacs provides as
a built-in option: <a href="https://protesilaos.com/codelog/2022-04-14-emacs-discontinue-mct/">https://protesilaos.com/codelog/2022-04-14-emacs-discontinue-mct/</a>.</p>
  </li>
  <li>
    <p>org-treescope :: The package points to a GitHub repo, which is
archived.  The current source is on GitLab, but the package is not
updated accordingly.  This makes me believe it is not actively
maintained and am thus removing it from the list.</p>
  </li>
  <li>
    <p>paradox :: When I tried paradox, it took over my C-c g binding which I
have for Magit.  As an Emacs user, I consider this an unacceptable
transgression.  Looking at paradox’s git repo, the project is not
maintained.  If things change, I am happy to reinstate support for it.</p>
  </li>
  <li>
    <p>vc-annotate (built-in) :: It has not been working properly for a long
time now.  Colours are unset and are not re-applied when switching
between the <code class="language-plaintext highlighter-rouge">modus-operandi</code> and <code class="language-plaintext highlighter-rouge">modus-vivendi</code> themes.</p>

    <p>Furthermore, the way <code class="language-plaintext highlighter-rouge">vc-annotate-color-map</code> intersects with
<code class="language-plaintext highlighter-rouge">vc-annotate-background-mode</code> puts us in an awkward spot: when the
mode is non-nil, the mapped values are used as backgrounds WITHOUT
giving us the chance to make the appropriate adjustments to the
foreground (so we end up with inaccessible colour combinations).  This
means that we must fix a problem which is not ours by overriding the
user option of the background altogether.  A theme outright disabling
user options is bad form.</p>

    <p>Even documenting a user-level set of configurations will not suffice,
as the results are unreliable.  I tried the code which I copy further
below to test annotation with/without background, plus the change in
values when switching between modus-operandi and modus-vivendi.
Again, colours are not updated properly (I know the buffer of <code class="language-plaintext highlighter-rouge">M-x
vc-annotate</code> needs to be generated again), as <code class="language-plaintext highlighter-rouge">modus-operandi</code> may
retain the values set by <code class="language-plaintext highlighter-rouge">modus-vivendi</code> or vice-versa.</p>

    <p>Ultimately, I feel <code class="language-plaintext highlighter-rouge">vc-annotate</code> needs to be refactored to use
ordinary faces in ordinary ways.  Or, at least, not try to outsmart
the user/theme about the choice of colours.</p>

    <p>Thanks to Philip Kaludercic for starting the thread about the
<code class="language-plaintext highlighter-rouge">vc-annotate-background-mode</code> which reminded me about this problem:
<a href="https://lists.sr.ht/~protesilaos/modus-themes/%3C875ylfxkgi.fsf@posteo.net%3E">https://lists.sr.ht/~protesilaos/modus-themes/%3C875ylfxkgi.fsf@posteo.net%3E</a>.</p>

    <p>The code I alluded to:</p>

    <div class="language-elisp highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="p">(</span><span class="k">setq</span> <span class="nv">vc-annotate-background-mode</span> <span class="no">nil</span><span class="p">)</span>

<span class="p">(</span><span class="nb">defun</span> <span class="nv">my-modus-themes-vc-annotate</span> <span class="p">()</span>
  <span class="c1">;; Actual values are for demo purposes</span>
  <span class="p">(</span><span class="nv">modus-themes-with-colors</span>
    <span class="p">(</span><span class="k">if</span> <span class="nv">vc-annotate-background-mode</span>
        <span class="p">(</span><span class="k">setq</span> <span class="nv">vc-annotate-background</span> <span class="nv">bg-alt</span>
              <span class="nv">vc-annotate-color-map</span>
              <span class="o">`</span><span class="p">((</span><span class="mi">20</span> <span class="o">.</span>  <span class="o">,</span><span class="nv">red-intense-bg</span><span class="p">)</span>
                <span class="p">(</span><span class="mi">40</span> <span class="o">.</span>  <span class="o">,</span><span class="nv">red-subtle-bg</span><span class="p">)</span>
                <span class="p">(</span><span class="mi">60</span> <span class="o">.</span>  <span class="o">,</span><span class="nv">red-refine-bg</span><span class="p">)</span>
                <span class="p">(</span><span class="mi">80</span> <span class="o">.</span>  <span class="o">,</span><span class="nv">yellow-intense-bg</span><span class="p">)</span>
                <span class="p">(</span><span class="mi">100</span> <span class="o">.</span> <span class="o">,</span><span class="nv">yellow-subtle-bg</span><span class="p">)</span>
                <span class="p">(</span><span class="mi">120</span> <span class="o">.</span> <span class="o">,</span><span class="nv">yellow-refine-bg</span><span class="p">)</span>
                <span class="p">(</span><span class="mi">140</span> <span class="o">.</span> <span class="o">,</span><span class="nv">magenta-intense-bg</span><span class="p">)</span>
                <span class="p">(</span><span class="mi">160</span> <span class="o">.</span> <span class="o">,</span><span class="nv">magenta-subtle-bg</span><span class="p">)</span>
                <span class="p">(</span><span class="mi">180</span> <span class="o">.</span> <span class="o">,</span><span class="nv">magenta-refine-bg</span><span class="p">)</span>
                <span class="p">(</span><span class="mi">200</span> <span class="o">.</span> <span class="o">,</span><span class="nv">cyan-intense-bg</span><span class="p">)</span>
                <span class="p">(</span><span class="mi">220</span> <span class="o">.</span> <span class="o">,</span><span class="nv">cyan-subtle-bg</span><span class="p">)</span>
                <span class="p">(</span><span class="mi">240</span> <span class="o">.</span> <span class="o">,</span><span class="nv">cyan-refine-bg</span><span class="p">)</span>
                <span class="p">(</span><span class="mi">260</span> <span class="o">.</span> <span class="o">,</span><span class="nv">green-intense-bg</span><span class="p">)</span>
                <span class="p">(</span><span class="mi">280</span> <span class="o">.</span> <span class="o">,</span><span class="nv">green-subtle-bg</span><span class="p">)</span>
                <span class="p">(</span><span class="mi">300</span> <span class="o">.</span> <span class="o">,</span><span class="nv">green-refine-bg</span><span class="p">)</span>
                <span class="p">(</span><span class="mi">320</span> <span class="o">.</span> <span class="o">,</span><span class="nv">blue-intense-bg</span><span class="p">)</span>
                <span class="p">(</span><span class="mi">340</span> <span class="o">.</span> <span class="o">,</span><span class="nv">blue-subtle-bg</span><span class="p">)</span>
                <span class="p">(</span><span class="mi">360</span> <span class="o">.</span> <span class="o">,</span><span class="nv">blue-refine-bg</span><span class="p">)))</span>
      <span class="p">(</span><span class="k">setq</span> <span class="nv">vc-annotate-background</span> <span class="no">nil</span>
            <span class="nv">vc-annotate-color-map</span>
            <span class="o">`</span><span class="p">((</span><span class="mi">20</span> <span class="o">.</span> <span class="o">,</span><span class="nv">red</span><span class="p">)</span>
              <span class="p">(</span><span class="mi">40</span> <span class="o">.</span> <span class="o">,</span><span class="nv">magenta</span><span class="p">)</span>
              <span class="p">(</span><span class="mi">60</span> <span class="o">.</span> <span class="o">,</span><span class="nv">magenta-alt</span><span class="p">)</span>
              <span class="p">(</span><span class="mi">80</span> <span class="o">.</span> <span class="o">,</span><span class="nv">red-alt</span><span class="p">)</span>
              <span class="p">(</span><span class="mi">100</span> <span class="o">.</span> <span class="o">,</span><span class="nv">yellow</span><span class="p">)</span>
              <span class="p">(</span><span class="mi">120</span> <span class="o">.</span> <span class="o">,</span><span class="nv">yellow-alt</span><span class="p">)</span>
              <span class="p">(</span><span class="mi">140</span> <span class="o">.</span> <span class="o">,</span><span class="nv">fg-special-warm</span><span class="p">)</span>
              <span class="p">(</span><span class="mi">160</span> <span class="o">.</span> <span class="o">,</span><span class="nv">fg-special-mild</span><span class="p">)</span>
              <span class="p">(</span><span class="mi">180</span> <span class="o">.</span> <span class="o">,</span><span class="nv">green</span><span class="p">)</span>
              <span class="p">(</span><span class="mi">200</span> <span class="o">.</span> <span class="o">,</span><span class="nv">green-alt</span><span class="p">)</span>
              <span class="p">(</span><span class="mi">220</span> <span class="o">.</span> <span class="o">,</span><span class="nv">cyan-alt-other</span><span class="p">)</span>
              <span class="p">(</span><span class="mi">240</span> <span class="o">.</span> <span class="o">,</span><span class="nv">cyan-alt</span><span class="p">)</span>
              <span class="p">(</span><span class="mi">260</span> <span class="o">.</span> <span class="o">,</span><span class="nv">cyan</span><span class="p">)</span>
              <span class="p">(</span><span class="mi">280</span> <span class="o">.</span> <span class="o">,</span><span class="nv">fg-special-cold</span><span class="p">)</span>
              <span class="p">(</span><span class="mi">300</span> <span class="o">.</span> <span class="o">,</span><span class="nv">blue</span><span class="p">)</span>
              <span class="p">(</span><span class="mi">320</span> <span class="o">.</span> <span class="o">,</span><span class="nv">blue-alt</span><span class="p">)</span>
              <span class="p">(</span><span class="mi">340</span> <span class="o">.</span> <span class="o">,</span><span class="nv">blue-alt-other</span><span class="p">)</span>
              <span class="p">(</span><span class="mi">360</span> <span class="o">.</span> <span class="o">,</span><span class="nv">magenta-alt-other</span><span class="p">))))))</span>

<span class="p">(</span><span class="nv">add-hook</span> <span class="ss">'modus-themes-after-load-theme-hook</span> <span class="nf">#'</span><span class="nv">my-modus-themes-vc-annotate</span><span class="p">)</span>
</code></pre></div>    </div>
  </li>
</ul>

<h3>Revised supported faces or face groups</h3>

<ul>
  <li>
    <p>Enhanced the default background colour of the current date in the Org
agenda.  This is a subtle change, all things considered, which makes
it easier to discern where the highlight is while it remains close to
the spirit of the previous design.  The idea is to not add too much
saturation here, because the buffer is already “busy” with lots of
highlights.  Thanks to Daniel Mendler for the feedback on the mailing
list: <a href="https://lists.sr.ht/~protesilaos/modus-themes/%3C3d8b1096-a7db-1e08-fefe-d39bed4a7ea3@daniel-mendler.de%3E">https://lists.sr.ht/~protesilaos/modus-themes/%3C3d8b1096-a7db-1e08-fefe-d39bed4a7ea3@daniel-mendler.de%3E</a>.</p>
  </li>
  <li>
    <p>Restyled the <code class="language-plaintext highlighter-rouge">M-x man</code> and <code class="language-plaintext highlighter-rouge">M-x woman</code> faces to have a bit more
saturation.  A while ago I desaturated the <code class="language-plaintext highlighter-rouge">Man-overstrike</code> and
<code class="language-plaintext highlighter-rouge">woman-bold</code> faces on the premise that the added bold weight would be
sufficient.  However, the bold weight may sometimes not draw the
desired attention, such as at small point sizes or with certain font
configurations.  As such, the added intensity in colour is necessary.</p>
  </li>
  <li>
    <p>Changed the Selectrum quick key faces (<code class="language-plaintext highlighter-rouge">selectrum-quick-keys-match</code>
and <code class="language-plaintext highlighter-rouge">selectrum-quick-keys-highlight</code>) to have the same style as Avy,
Vertico’s own “quick keys”, and related.  For a technical analysis,
read “Modus themes: case study on Avy faces and colour combinations”:
<a href="https://protesilaos.com/codelog/2022-04-20-modus-themes-case-study-avy/">https://protesilaos.com/codelog/2022-04-20-modus-themes-case-study-avy/</a>.</p>
  </li>
  <li>
    <p>Made internal adjustments so that <code class="language-plaintext highlighter-rouge">M-x list-packages</code> inherits from
the standard <code class="language-plaintext highlighter-rouge">success</code>, <code class="language-plaintext highlighter-rouge">warning</code>, and <code class="language-plaintext highlighter-rouge">error</code> faces instead of adding
its own face attributes.  In practice, the user will notice a change
for new packages in the listing if <code class="language-plaintext highlighter-rouge">modus-themes-deuteranopia</code> is
non-nil.</p>
  </li>
  <li>
    <p>Introduced the same inheritance rules as above for the <code class="language-plaintext highlighter-rouge">syslog</code>
package (mutatis mutandis).</p>
  </li>
  <li>
    <p>Increased the saturation of the <code class="language-plaintext highlighter-rouge">package-status-available</code> face, which
is shown in the <code class="language-plaintext highlighter-rouge">M-x list-packages</code> buffer.  The overall effect is
subtle, though sufficiently noticeable.</p>
  </li>
  <li>
    <p>Revised the faces of the <code class="language-plaintext highlighter-rouge">deft</code> package to make it look consistent
with the rest of the theme’s relevant interfaces (to the extent
possible as Deft uses a non-standard presentation).</p>
  </li>
  <li>
    <p>Aligned the <code class="language-plaintext highlighter-rouge">speedbar-highlight-face</code> with the user option
<code class="language-plaintext highlighter-rouge">modus-themes-intense-mouseovers</code>.</p>
  </li>
  <li>
    <p>Refined the <code class="language-plaintext highlighter-rouge">highlight-thing</code> face (see package of the same name).
This makes it stand out more and it also aligns it with the standard
<code class="language-plaintext highlighter-rouge">match</code> face, which is pertinent here.</p>
  </li>
  <li>
    <p>Amplified the saturation of the <code class="language-plaintext highlighter-rouge">dired-git-info</code> face.  Makes it
easier to differentiate the Git commit text from the Dired listing,
without drawing too much attention to itself.</p>
  </li>
  <li>
    <p>Adjusted the hue of the <code class="language-plaintext highlighter-rouge">easy-jekyll-help-face</code> from teal to blue.
This makes it look more like the standard <code class="language-plaintext highlighter-rouge">help-key-binding</code> face,
although <code class="language-plaintext highlighter-rouge">easy-jekyll</code> does not align with upstream Emacs in this
regard.</p>
  </li>
  <li>
    <p>Intensified the background of <code class="language-plaintext highlighter-rouge">rectangle-preview</code> to work even in
cases where a grey background is already on display.  This face is
used for the <code class="language-plaintext highlighter-rouge">string-rectangle</code> command (e.g. C-x SPC to draw a
rectangle and C-t to insert text in its stead—works as a simple
“multiple cursors” on a straight line).</p>
  </li>
</ul>

<h3>Support for new faces or face groups</h3>

<ul>
  <li>chart (built-in)</li>
  <li>denote</li>
  <li>edmacro-label (Emacs 29)</li>
  <li>info+</li>
  <li>leerzeichen</li>
</ul>

<p>A comment on <code class="language-plaintext highlighter-rouge">info+</code>.  As is the case with PACKAGE+ packages from the
Emacs Wiki, info+ defines lots of faces that hardcode colour values
instead of inheriting from basic faces.  It does so for no good reason
and the results will likely not look decent in any theme.  Furthermore,
these faces colourise too much even when the colour values can be
appropriately combined (ceteris paribus), making the buffer harder to
read.</p>

<p>The support I add for info+ is consistent with the design principles of
the modus-themes, one of which is to avoid exaggerations as those
indirectly affect legibility.  As such, some of the changes I introduce
here outright remove colouration, while others align the various
constructs with the overall aesthetic of the themes.</p>

<p>Note that, by default, info+ adds clickable buttons to glossary terms.
This produces awkward combinations such as by buttonising the “string”
component inside of what actually is a function’s argument.  So you
have, say, FORMAT-[STRING] where “[]” represents the button: the FORMAT
gets one face and the [STRING] another, even though they are part of a
single argument.  To me this looks broken and is counter-productive,
though it is not up to the theme to decide how packages fontify the
various constructs.  At any rate, button styles at the theme level are
controlled by the user option <code class="language-plaintext highlighter-rouge">modus-themes-box-buttons</code>.</p>

<p>Thanks to Jonas Collberg for the feedback in issue 33 over at the GitHub
mirror: <a href="https://github.com/protesilaos/modus-themes/issues/33">https://github.com/protesilaos/modus-themes/issues/33</a>.</p>

<h3>Miscellaneous</h3>

<ul>
  <li>
    <p>Named the mailing list address as the =Maintainer:= of Denote.
Together with the other package headers, they help the user find our
primary sources and/or communication channels.  This change conforms
with work being done upstream in package.el by Philip Kaludercic.  I
was informed about it here:
<a href="https://lists.sr.ht/~protesilaos/general-issues/%3C875ykl84yi.fsf%40posteo.net%3E">https://lists.sr.ht/~protesilaos/general-issues/%3C875ykl84yi.fsf%40posteo.net%3E</a>.</p>
  </li>
  <li>
    <p>Addressed byte compilation warnings in doc strings pertaining to the
use of literal quotes.  Thanks to Matt Armstrong and Rudolf Adamkovič
for the feedback on the mailing list:
<a href="https://lists.sr.ht/~protesilaos/modus-themes/%3C87bktlvgyy.fsf@rfc20.org%3E">https://lists.sr.ht/~protesilaos/modus-themes/%3C87bktlvgyy.fsf@rfc20.org%3E</a>.</p>
  </li>
  <li>
    <p>Fixed the <code class="language-plaintext highlighter-rouge">:link</code> value in the declaration of the user options
<code class="language-plaintext highlighter-rouge">modus-themes-operandi-color-overrides</code>, <code class="language-plaintext highlighter-rouge">modus-themes-vivendi-color-overrides</code>.
It once again directs to the correct heading in the manual.</p>
  </li>
  <li>
    <p>Documented all the aforementioned, where necessary.</p>
  </li>
  <li>
    <p>Mentioned my <code class="language-plaintext highlighter-rouge">fontaine</code> and <code class="language-plaintext highlighter-rouge">lin</code> packages in the relevant sections of
the manual.  The former helps set fonts and switch between font
presents.  The latter is a stylistic variant of hl-line (its
documentation explains its raison d’être).</p>
  </li>
</ul>