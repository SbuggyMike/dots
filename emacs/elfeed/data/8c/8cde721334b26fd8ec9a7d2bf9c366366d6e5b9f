<!-- SC_OFF --><div class="md"><p>When writing an application sometimes a need for storing sensitive data elements (like tokens, passwords and cryptographic keys) arises. For that Linux provides “keyrings” which is a data store that allows applications to access data securely without exposing it to other applications/processes/users. Based on the man page “kerings” is an in-kernel key management and retention facility (<a href="https://man7.org/linux/man-pages/man7/keyrings.7.html">https://man7.org/linux/man-pages/man7/keyrings.7.html</a>).</p> <p>Overall, “keyrings” are used by different types of applications such as authentication servers, web servers and database servers. Examples for those types are: MySQL (<a href="https://dev.mysql.com/doc/refman/8.0/en/keyring.html">https://dev.mysql.com/doc/refman/8.0/en/keyring.html</a>),</p> <p>In order to use “keyrings” we can leverage on of the following syscalls: “add_key()” (<a href="https://man7.org/linux/man-pages/man2/add_key.2.html">https://man7.org/linux/man-pages/man2/add_key.2.html</a>), “request_key()” (<a href="https://man7.org/linux/man-pages/man2/request_key.2.html">https://man7.org/linux/man-pages/man2/request_key.2.html</a>) or “keyctl()” (<a href="https://man7.org/linux/man-pages/man2/keyctl.2.html">https://man7.org/linux/man-pages/man2/keyctl.2.html</a>). Each key has several attributes as follows: serial number (ID), type, description (name), payload (data), access rights, expression time and reference count. The types of keys which are supported are: “keyring”, “user”, “logon” and “big_key”. (<a href="https://man7.org/linux/man-pages/man7/keyrings.7.html">https://man7.org/linux/man-pages/man7/keyrings.7.html</a>).</p> <p>They are different libraries/modules in a variety of programming languages that enable programmers to read/write data into/from keyring. An example in Python is shown in the screen below.</p> <p>Moreover, there are different entries in proc that give us information about the keyrings, we are going to focus only on two. “/proc/keys” which is relevant since kernel 2.6.10, it displays all the keys the reading thread has view permissions. “/proc/key-users” which is also relevant since kernel 2.6.10, that shows various information for each uid that has at least one key on the system (<a href="https://man7.org/linux/man-pages/man7/keyrings.7.html">https://man7.org/linux/man-pages/man7/keyrings.7.html</a>).</p> <p>Lastly, we can also go over the kernel code that handles keyring (<a href="https://elixir.bootlin.com/linux/latest/source/security/keys/keyring.c">https://elixir.bootlin.com/linux/latest/source/security/keys/keyring.c</a>). Also there is “keyutils” which is a library and a set of utilities that allows access to the in-kernel keyrings facility (<a href="https://man7.org/linux/man-pages/man7/keyutils.7.html">https://man7.org/linux/man-pages/man7/keyutils.7.html</a>).</p> <p>&#x200B;</p> <p><a href="https://preview.redd.it/ja3nosxswzxa1.png?width=720&amp;format=png&amp;auto=webp&amp;s=28d8bd7e80af425493090f7aa10630f6d8f107cc">https://preview.redd.it/ja3nosxswzxa1.png?width=720&amp;format=png&amp;auto=webp&amp;s=28d8bd7e80af425493090f7aa10630f6d8f107cc</a></p> </div><!-- SC_ON --> &#32; submitted by &#32; <a href="https://www.reddit.com/user/boutnaru"> /u/boutnaru </a> <br/> <span><a href="https://www.reddit.com/r/linux/comments/138idqm/linux_keyrings/">[link]</a></span> &#32; <span><a href="https://www.reddit.com/r/linux/comments/138idqm/linux_keyrings/">[comments]</a></span>