<p>I’ve <a href="https://irreal.org/blog/?p=11296">written before</a> about Aimé Bertrand and his Emacs configuration. In particular, I was impressed with the many specialized functions he had to do various UI tweaks. Bertrand is back with another post. This one discusses some of his <a href="https://macowners.club/posts/custom-functions-5-navigation/">navigation functions</a>.</p>
<p>As before, the functions are mostly simple and designed to save him a step or two as he moves around among his Emacs windows. For example, when he splits a window (either vertically or horizontally), the focus remains with the original window. He doesn’t like that and wants the new window to become active. That’s not hard to do and it doesn’t save a huge amount of time but once you implement the new functions, you never have to think about it again.</p>
<p>A similar set of functions opens a new file but splits the window first and opens the file in the new window. He also has a function that will toggle a window splitting from side-by-side to top-and-bottom or vice versa</p>
<p>He’s got some functions dealing with Tabs but given that I never use Emacs Tabs I didn’t pay too much attention to those. There are a few other functions as well so it’s well worth your time to take a look at his post.</p>
<p>By far the most interesting thing for me was his use of <a href="https://github.com/tecosaur/emacs-everywhere">emacs-everywhere</a>, a package that allows you fill in text for a non-Emacs application by popping up an Emacs buffer and saving the result back to the original application. As soon as I read that, I installed emacs-everywhere and bound it to an easy to use key sequence. It’s not quite “never leaving Emacs” but it does allow me to use all my normal editing methods in any application. I’ve seen other packages that do this but they seemed more complicated to set up so this is a big win for me.</p>