<p>
Emacs package developers sometimes need add live demo to her/his project.
</p>

<p>
The requirement came from <a href="https://github.com/tumashu/pyim/pull/446#issuecomment-1163886411">my discussion with pyim's developer</a>.
</p>

<p>
With all the linting and unit tests running for ages, he still need a quick way to test if the package actually works on Emacs 25 (and other Emacs versions). I totally agree with him because my own projects have similar problems.
</p>

<p>
A live demo built into the project is very useful for developers and testers.
</p>

<p>
Besides, a live demo could help users. They try the new package with no hassle. They don't modify their own emacs configuration to try the new package.
</p>

<p>
So I figured out a simple solution. The best part is that any packages could use this solution with minimum change if their CI script is already set up.
</p>

<p>
In a package's CI script, Emacs is running in batch mode (with "–batch" option). What I suggest is add another Makefile task <code>runemacs</code> which is very similar to the original CI task. But in this task, the "–batch" options is removed.
</p>

<p>
See <a href="https://github.com/redguardtoo/find-file-in-project/commit/b258f96d9663d9bf6ff7de1ff6bbfb921b30ea77">the solution I added for find-file-in-project</a>,
</p>
<div class="org-src-container">

<pre><code class="lang-diff">diff --git a/Makefile b/Makefile
index 9005ca4..8f7a8ae 100644
--- a/Makefile
+++ b/Makefile
@@ -1,7 +1,8 @@
 SHELL = /bin/sh
 EMACS ?= emacs
 PROFILER =
-EMACS_BATCH_OPTS=--batch -Q -l find-file-in-project.el
+EMACS_GENERIC_OPTS=-Q -L . -L deps/ivy-0.13.4
+EMACS_BATCH_OPTS:=--batch $(EMACS_GENERIC_OPTS)
 RM = @rm -rf

 .PHONY: test clean test compile
@@ -18,3 +19,8 @@ compile: clean
 # Run tests.
 test: compile
    @$(EMACS) $(EMACS_BATCH_OPTS) -l tests/ffip-tests.el
+
+runemacs:
+   @mkdir -p deps;
+   @if [ ! -f deps/ivy-0.13.4/ivy.el ]; then curl -L https://stable.melpa.org/packages/ivy-0.13.4.tar | tar x -C deps/; fi;
+   @$(EMACS) $(EMACS_GENERIC_OPTS) --load ./tests/emacs-init.el
diff --git a/tests/emacs-init.el b/tests/emacs-init.el
new file mode 100644
index 0000000..a4df068
--- /dev/null
+++ b/tests/emacs-init.el
@@ -0,0 +1,17 @@
+(require 'find-file-in-project)
+(require 'ivy)
+(ivy-mode 1)
+(setq ffip-match-path-instead-of-filename t)
+(run-with-idle-timer
+ 1
+ nil
+ (lambda ()
+   (erase-buffer)
+   (goto-char (point-min))
+   (insert
+    ";; Setup of this demo,\n"
+    "(setq ffip-match-path-instead-of-filename t)\n\n\n"
+    ";; Run \"M-x find-file-in-project-by-selected\" and input search keyword \"el\" or \"tests\".\n\n\n"
+    ";; Move cursor above below paths and run \"M-x find-file-in-project-at-point\",\n\n"
+    ";;   tests/ffip-tests.el ; open file directly \n"
+    ";;   find-file-in-project.el:50 ; open file and jump to line 50\n")))
</code></pre>

</div>

<p>
Similar solution is also used in <a href="https://github.com/tumashu/pyim">pyim</a>, it's one liner in shell to test it in Emacs 25,
</p>
<div class="org-src-container">

<pre><code class="lang-sh">EMACS=/home/cb/what-ever-path/25.1/bin/emacs make runemacs
</code></pre>

</div>