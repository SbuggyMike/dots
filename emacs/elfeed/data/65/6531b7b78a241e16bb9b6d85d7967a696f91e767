<p>Koustuv Sinha is a PhD student in machine learning and natural language processing. Because much of his time is devoted to reading research papers in his field, he’s devoted significant effort into optimizing his workflow.</p>
<p>The TL;DR is that he’s used Emacs and Org-mode to develop an <a href="https://www.cs.mcgill.ca/~ksinha4/post/emacs_research_workflow/">efficient method of discovering and curating interesting papers</a>. It starts with the discovery. For this he uses <a href="https://github.com/skeeto/elfeed">Elfeed</a> to subscribe to various <a href="https://arxiv.org/">Arxiv</a> feeds in his areas of interest. He uses the <a href="https://github.com/sp1ff/elfeed-score">elfeed-score</a> package to rank these papers in the approximate order of his interest in them.</p>
<p>When he reads an abstract in the Elfeed results that seems interesting, he fires off a process that captures the paper’s metadata to his bibliography file; grabs a copy of the paper, renaming it to the bibtext key, and storing it in a central repository; and adds it to an Org file listing the papers we wants to read.</p>
<p>A lot of this is accomplished by leveraging John Kitchin’s <a href="https://github.com/jkitchin/org-ref">org-ref</a>. He calls org-ref functions directly to get and store the paper’s data. It’s a nice example of reusing someone else’s codebase in your own.</p>
<p>Sinha provides a huge number of details in his post so be sure to take a look. If you have similar needs, this is an excellent starting point for your own workflow or even something worth stealing wholesale.</p>