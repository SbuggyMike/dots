<!-- SC_OFF --><div class="md"><p>Hello!</p> <p>I&#39;m using this link <a href="https://old.reddit.com/r/emacs/comments/aew3yg/new_to_emacslisp_attempting_to_make_a_personal/">https://old.reddit.com/r/emacs/comments/aew3yg/new_to_emacslisp_attempting_to_make_a_personal/</a> to define my set of colors to use across all theme file</p> <p>but it does not work</p> <p>my custom theme file:</p> <pre><code>(deftheme test-theme &quot;Created 2022-08-02.&quot;) (let ((red &quot;#ff005f&quot;) (green &quot;#00ff87&quot;) (cyan &quot;#00ffff&quot;) (purple &quot;#af5fff&quot;)) ) (custom-theme-set-faces &#39;test-theme `(cursor ((t (:background ,red)))) &#39;(fixed-pitch ((t (:height 150 :family &quot;Terminus&quot;)))) &#39;(variable-pitch ((t (:height 150 :family &quot;Sans serif&quot;)))) &#39;(escape-glyph ((t (:foreground &quot;cyan&quot;)))) &#39;(homoglyph ((t (:foreground &quot;cyan&quot;)))) &#39;(minibuffer-prompt ((t (:background &quot;black&quot; :foreground &quot;cyan&quot; :weight bold)))) &#39;(highlight ((t (:background &quot;#454545&quot;)))) &#39;(region ((t (:extend t :background &quot;#ff8700&quot; :foreground &quot;black&quot;)))) &#39;(shadow ((t (:foreground &quot;grey70&quot;)))) &#39;(secondary-selection ((t (:extend t :background &quot;SkyBlue4&quot;)))) &#39;(trailing-whitespace ((t (:background &quot;#ff0000&quot; :foreground &quot;black&quot;)))) &#39;(font-lock-builtin-face ((t (:foreground &quot;LightSteelBlue&quot;)))) &#39;(font-lock-comment-delimiter-face ((t (:inherit font-lock-comment-face)))) &#39;(font-lock-comment-face ((t (:foreground &quot;chocolate1&quot;)))) &#39;(font-lock-constant-face ((((class color) (min-colors 256) (background dark)) (:foreground &quot;Aquamarine&quot;)) (t (:underline (:color foreground-color :style line) :weight bold)))) &#39;(font-lock-doc-face ((t (:inherit font-lock-string-face)))) &#39;(font-lock-function-name-face ((((class color) (min-colors 88) (background light)) (:foreground &quot;Blue1&quot;)) (((class color) (min-colors 88) (background dark)) (:foreground &quot;LightSkyBlue&quot;)) (((class color) (min-colors 16) (background light)) (:foreground &quot;Blue&quot;)) (((class color) (min-colors 16) (background dark)) (:foreground &quot;LightSkyBlue&quot;)) (((class color) (min-colors 8)) (:weight bold :foreground &quot;blue&quot;)) (t (:weight bold :inverse-video t)))) &#39;(font-lock-keyword-face ((t (:foreground &quot;Cyan1&quot;)))) &#39;(font-lock-negation-char-face ((t nil))) &#39;(font-lock-preprocessor-face ((t (:inherit font-lock-builtin-face)))) &#39;(font-lock-regexp-grouping-backslash ((t (:inherit bold)))) &#39;(font-lock-regexp-grouping-construct ((t (:inherit bold)))) &#39;(font-lock-string-face ((t (:foreground &quot;LightSalmon&quot;)))) &#39;(font-lock-type-face ((t (:foreground &quot;PaleGreen&quot;)))) &#39;(font-lock-variable-name-face ((t (:foreground &quot;LightGoldenrod&quot;)))) &#39;(font-lock-warning-face ((t (:inherit error)))) &#39;(button ((t (:inherit link)))) &#39;(link ((t (:foreground &quot;cyan1&quot; :underline t)))) &#39;(link-visited ((t (:inherit link :foreground &quot;violet&quot;)))) &#39;(header-line ((t (:inherit mode-line :background &quot;grey20&quot; :foreground &quot;grey90&quot; :box nil)))) &#39;(tooltip ((t (:inherit variable-pitch :background &quot;lightyellow&quot; :foreground &quot;black&quot;)))) &#39;(mode-line ((t (:background &quot;grey75&quot; :foreground &quot;black&quot; :box (:line-width -1 :style released-button))))) &#39;(mode-line-buffer-id ((t (:weight bold)))) &#39;(mode-line-emphasis ((t (:weight bold)))) &#39;(mode-line-highlight ((t (:box (:line-width 2 :color &quot;grey40&quot; :style released-button))))) &#39;(mode-line-inactive ((t (:inherit mode-line :background &quot;grey30&quot; :foreground &quot;grey80&quot; :box (:line-width -1 :color &quot;grey40&quot;) :weight light)))) &#39;(isearch ((t (:background &quot;palevioletred2&quot; :foreground &quot;brown4&quot;)))) &#39;(isearch-fail ((t (:background &quot;red4&quot;)))) &#39;(lazy-highlight ((t (:background &quot;paleturquoise4&quot;)))) &#39;(match ((t (:background &quot;RoyalBlue3&quot;)))) &#39;(next-error ((t (:inherit region)))) &#39;(query-replace ((t (:inherit isearch)))) &#39;(default ((t (:inherit nil :extend nil :stipple nil :background &quot;#282828&quot; :foreground &quot;#ababab&quot; :inverse-video nil :box nil :strike-through nil :overline nil :underline nil :slant normal :weight normal :height 150 :width normal :foundry &quot;nil&quot; :family &quot;Unifont&quot;))))) (provide-theme &#39;test-theme) </code></pre> <p>error after calling M-x load theme RET test-theme</p> <pre><code> Debugger entered--Lisp error: (void-variable red) (list &#39;:background red) (list t (list &#39;:background red)) (list (list t (list &#39;:background red))) (list &#39;cursor (list (list t (list &#39;:background red)))) (custom-theme-set-faces &#39;test-theme (list &#39;cursor (list (list t (list &#39;:background red)))) &#39;(fixed-pitch ((t (:height 150 :family &quot;Terminus&quot;)))) &#39;(variable-pitch ((t (:height 150 :family &quot;Sans serif&quot;)))) &#39;(escape-glyph ((t (:foreground &quot;cyan&quot;)))) &#39;(homoglyph ((t (:foreground &quot;cyan&quot;)))) &#39;(minibuffer-prompt ((t (:background &quot;black&quot; :foreground &quot;cyan&quot; :weight bold)))) &#39;(highlight ((t (:background &quot;#454545&quot;)))) &#39;(region ((t (:extend t :background &quot;#ff8700&quot; :foreground &quot;black&quot;)))) &#39;(shadow ((t (:foreground &quot;grey70&quot;)))) &#39;(secondary-selection ((t (:extend t :background &quot;SkyBlue4&quot;)))) &#39;(trailing-whitespace ((t (:background &quot;#ff0000&quot; :foreground &quot;black&quot;)))) &#39;(font-lock-builtin-face ((t (:foreground &quot;LightSteelBlue&quot;)))) &#39;(font-lock-comment-delimiter-face ((t (:inherit font-lock-comment-face)))) &#39;(font-lock-comment-face ((t (:foreground &quot;chocolate1&quot;)))) &#39;(font-lock-constant-face ((((class color) (min-colors 256) (background dark)) (:foreground &quot;Aquamarine&quot;)) (t (:underline (:color foreground-color :style line) :weight bold)))) &#39;(font-lock-doc-face ((t (:inherit font-lock-string-face)))) &#39;(font-lock-function-name-face ((((class color) (min-colors 88) (background light)) (:foreground &quot;Blue1&quot;)) (((class color) (min-colors 88) (background dark)) (:foreground &quot;LightSkyBlue&quot;)) (((class color) (min-colors 16) (background light)) (:foreground &quot;Blue&quot;)) (((class color) (min-colors 16) (background dark)) (:foreground &quot;LightSkyBlue&quot;)) (((class color) (min-colors 8)) (:weight bold :foreground &quot;blue&quot;)) (t (:weight bold :inverse-video t)))) &#39;(font-lock-keyword-face ((t (:foreground &quot;Cyan1&quot;)))) &#39;(font-lock-negation-char-face ((t nil))) &#39;(font-lock-preprocessor-face ((t (:inherit font-lock-builtin-face)))) &#39;(font-lock-regexp-grouping-backslash ((t (:inherit bold)))) &#39;(font-lock-regexp-grouping-construct ((t (:inherit bold)))) &#39;(font-lock-string-face ((t (:foreground &quot;LightSalmon&quot;)))) &#39;(font-lock-type-face ((t (:foreground &quot;PaleGreen&quot;)))) &#39;(font-lock-variable-name-face ((t (:foreground &quot;LightGoldenrod&quot;)))) &#39;(font-lock-warning-face ((t (:inherit error)))) &#39;(button ((t (:inherit link)))) &#39;(link ((t (:foreground &quot;cyan1&quot; :underline t)))) &#39;(link-visited ((t (:inherit link :foreground &quot;violet&quot;)))) &#39;(header-line ((t (:inherit mode-line :background &quot;grey20&quot; :foreground &quot;grey90&quot; :box nil)))) &#39;(tooltip ((t (:inherit variable-pitch :background &quot;lightyellow&quot; :foreground &quot;black&quot;)))) &#39;(mode-line ((t (:background &quot;grey75&quot; :foreground &quot;black&quot; :box (:line-width -1 :style released-button))))) &#39;(mode-line-buffer-id ((t (:weight bold)))) &#39;(mode-line-emphasis ((t (:weight bold)))) &#39;(mode-line-highlight ((t (:box (:line-width 2 :color &quot;grey40&quot; :style released-button))))) &#39;(mode-line-inactive ((t (:inherit mode-line :background &quot;grey30&quot; :foreground &quot;grey80&quot; :box (:line-width -1 :color &quot;grey40&quot;) :weight light)))) &#39;(isearch ((t (:background &quot;palevioletred2&quot; :foreground &quot;brown4&quot;)))) &#39;(isearch-fail ((t (:background &quot;red4&quot;)))) &#39;(lazy-highlight ((t (:background &quot;paleturquoise4&quot;)))) &#39;(match ((t (:background &quot;RoyalBlue3&quot;)))) &#39;(next-error ((t (:inherit region)))) &#39;(query-replace ((t (:inherit isearch)))) &#39;(default ((t (:inherit nil :extend nil :stipple nil :background &quot;#282828&quot; :foreground &quot;#ababab&quot; :inverse-video nil :box nil :strike-through nil :overline nil :underline nil :slant normal :weight normal :height 150 :width normal :foundry &quot;nil&quot; :family &quot;Unifont&quot;))))) eval-buffer(nil nil &quot;/Users/user/.emacs.d/test-theme-theme.el&quot;) ; Reading at buffer position 3603 load-theme(test-theme nil nil) funcall-interactively(load-theme test-theme nil nil) call-interactively(load-theme record nil) command-execute(load-theme record) helm-M-x-execute-command(load-theme) helm-execute-selection-action-1() helm-execute-selection-action() helm-internal((((name . &quot;Emacs Commands history&quot;) (init #f(compiled-function () #&lt;bytecode 0x1ff58026e111&gt;)) (candidates . helm-candidates-in-buffer) (cleanup . helm-M-x--unwind-forms) (keymap keymap (keymap ...) keymap (29 . helm-M-x-toggle-short-doc) (21 . helm-M-x-universal-argument) keymap (127 . helm-mode-delete-char-backward-maybe) (27 keymap ...) (C-return . helm-cr-empty-string) keymap (f12 . #f(compiled-function () ... #&lt;bytecode 0x1ff580662211&gt;)) (f11 . #f(compiled-function () ... #&lt;bytecode 0x1ff5806621f9&gt;)) (f10 . #f(compiled-function () ... #&lt;bytecode 0x1ff5806621e1&gt;)) (f9 . #f(compiled-function () ... #&lt;bytecode 0x1ff5806621c9&gt;)) (f8 . #f(compiled-function () ... #&lt;bytecode 0x1ff5806621b1&gt;)) (f7 . #f(compiled-function () ... #&lt;bytecode 0x1ff580662199&gt;)) (f6 . #f(compiled-function () ... #&lt;bytecode 0x1ff580662181&gt;)) (f5 . #f(compiled-function () ... #&lt;bytecode 0x1ff580662169&gt;)) (f4 . #f(compiled-function () ... #&lt;bytecode 0x1ff580662151&gt;)) (f3 . #f(compiled-function () ... #&lt;bytecode 0x1ff580662139&gt;)) (f2 . #f(compiled-function () ... #&lt;bytecode 0x1ff580661de9&gt;)) (menu-bar keymap ...) (help keymap ...) (23 . helm-helm-yank-text-at-point-with-subkeys) (f1 . #f(compiled-function () ... #&lt;bytecode 0x1ff580661dd1&gt;)) (8 keymap ... ... ... ... ...) (20 . helm-toggle-resplit-and-swap-windows) (C-tab . undefined) (67108897 . helm-toggle-suspend-update) (3 keymap ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ...) (67108987 . helm-enlarge-window) ...) (action . helm-type-command-actions) (persistent-action . helm-M-x-persistent-action) (persistent-help . &quot;Describe this command&quot;) (help-message . helm-M-x-help-message) (requires-pattern . 0) (filtered-candidate-transformer helm-M-x-transformer-no-sort #f(compiled-function (candidates source) #&lt;bytecode 0x1ff5802f28dd&gt;) helm-fuzzy-highlight-matches) (volatile . t) (match identity) (fuzzy-match . t) (redisplay . identity) (nomark . t) (coerce . helm-symbolify) (header-line . &quot;C-j: Describe this command (keep...&quot;) (resume . helm-M-x-resume-fn) (multimatch . t) (must-match . t) (group . helm-command) (data . #f(compiled-function () #&lt;bytecode 0x1ff57fa90185&gt;)) (get-line . buffer-substring-no-properties) (search helm-mm-exact-search helm-mm-search helm-candidates-in-buffer-search-default-fn helm-fuzzy-search)) ((name . &quot;Emacs Commands&quot;) (init #f(compiled-function () #&lt;bytecode 0x1ff5800902e9&gt;)) (candidates . helm-candidates-in-buffer) (cleanup . helm-M-x--unwind-forms) (keymap keymap (keymap ...) keymap (29 . helm-M-x-toggle-short-doc) (21 . helm-M-x-universal-argument) keymap (127 . helm-mode-delete-char-backward-maybe) (27 keymap ...) (C-return . helm-cr-empty-string) keymap (f12 . #f(compiled-function () ... #&lt;bytecode 0x1ff580662211&gt;)) (f11 . #f(compiled-function () ... #&lt;bytecode 0x1ff5806621f9&gt;)) (f10 . #f(compiled-function () ... #&lt;bytecode 0x1ff5806621e1&gt;)) (f9 . #f(compiled-function () ... #&lt;bytecode 0x1ff5806621c9&gt;)) (f8 . #f(compiled-function () ... #&lt;bytecode 0x1ff5806621b1&gt;)) (f7 . #f(compiled-function () ... #&lt;bytecode 0x1ff580662199&gt;)) (f6 . #f(compiled-function () ... #&lt;bytecode 0x1ff580662181&gt;)) (f5 . #f(compiled-function () ... #&lt;bytecode 0x1ff580662169&gt;)) (f4 . #f(compiled-function () ... #&lt;bytecode 0x1ff580662151&gt;)) (f3 . #f(compiled-function () ... #&lt;bytecode 0x1ff580662139&gt;)) (f2 . #f(compiled-function () ... #&lt;bytecode 0x1ff580661de9&gt;)) (menu-bar keymap ...) (help keymap ...) (23 . helm-helm-yank-text-at-point-with-subkeys) (f1 . #f(compiled-function () ... #&lt;bytecode 0x1ff580661dd1&gt;)) (8 keymap ... ... ... ... ...) (20 . helm-toggle-resplit-and-swap-windows) (C-tab . undefined) (67108897 . helm-toggle-suspend-update) (3 keymap ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ...) (67108987 . helm-enlarge-window) ...) (action . helm-type-command-actions) (persistent-action . helm-M-x-persistent-action) (persistent-help . &quot;Describe this command&quot;) (help-message . helm-M-x-help-message) (requires-pattern . 0) (filtered-candidate-transformer helm-M-x-transformer-no-sort #f(compiled-function (candidates source) #&lt;bytecode 0x1ff5802f28dd&gt;) helm-fuzzy-highlight-matches) (volatile . t) (match identity) (fuzzy-match . t) (redisplay . identity) (nomark . t) (coerce . helm-symbolify) (header-line . &quot;C-j: Describe this command (keep...&quot;) (resume . helm-M-x-resume-fn) (multimatch . t) (must-match . t) (group . helm-command) (data . #f(compiled-function () #&lt;bytecode 0x1ff58026e131&gt;)) (get-line . buffer-substring-no-properties) (search helm-mm-exact-search helm-mm-search helm-candidates-in-buffer-search-default-fn helm-fuzzy-search))) nil &quot;M-x &quot; nil nil &quot;*helm M-x*&quot; nil nil helm-M-x-input-history) apply(helm-internal ((((name . &quot;Emacs Commands history&quot;) (init #f(compiled-function () #&lt;bytecode 0x1ff58026e111&gt;)) (candidates . helm-candidates-in-buffer) (cleanup . helm-M-x--unwind-forms) (keymap keymap ... keymap ... ... keymap ... ... ... keymap ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ...) (action . helm-type-command-actions) (persistent-action . helm-M-x-persistent-action) (persistent-help . &quot;Describe this command&quot;) (help-message . helm-M-x-help-message) (requires-pattern . 0) (filtered-candidate-transformer helm-M-x-transformer-no-sort #f(compiled-function (candidates source) #&lt;bytecode 0x1ff5802f28dd&gt;) helm-fuzzy-highlight-matches) (volatile . t) (match identity) (fuzzy-match . t) (redisplay . identity) (nomark . t) (coerce . helm-symbolify) (header-line . &quot;C-j: Describe this command (keep...&quot;) (resume . helm-M-x-resume-fn) (multimatch . t) (must-match . t) (group . helm-command) (data . #f(compiled-function () #&lt;bytecode 0x1ff57fa90185&gt;)) (get-line . buffer-substring-no-properties) (search helm-mm-exact-search helm-mm-search helm-candidates-in-buffer-search-default-fn helm-fuzzy-search)) ((name . &quot;Emacs Commands&quot;) (init #f(compiled-function () #&lt;bytecode 0x1ff5800902e9&gt;)) (candidates . helm-candidates-in-buffer) (cleanup . helm-M-x--unwind-forms) (keymap keymap ... keymap ... ... keymap ... ... ... keymap ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ...) (action . helm-type-command-actions) (persistent-action . helm-M-x-persistent-action) (persistent-help . &quot;Describe this command&quot;) (help-message . helm-M-x-help-message) (requires-pattern . 0) (filtered-candidate-transformer helm-M-x-transformer-no-sort #f(compiled-function (candidates source) #&lt;bytecode 0x1ff5802f28dd&gt;) helm-fuzzy-highlight-matches) (volatile . t) (match identity) (fuzzy-match . t) (redisplay . identity) (nomark . t) (coerce . helm-symbolify) (header-line . &quot;C-j: Describe this command (keep...&quot;) (resume . helm-M-x-resume-fn) (multimatch . t) (must-match . t) (group . helm-command) (data . #f(compiled-function () #&lt;bytecode 0x1ff58026e131&gt;)) (get-line . buffer-substring-no-properties) (search helm-mm-exact-search helm-mm-search helm-candidates-in-buffer-search-default-fn helm-fuzzy-search))) nil &quot;M-x &quot; nil nil &quot;*helm M-x*&quot; nil nil helm-M-x-input-history)) helm((((name . &quot;Emacs Commands history&quot;) (init #f(compiled-function () #&lt;bytecode 0x1ff58026e111&gt;)) (candidates . helm-candidates-in-buffer) (cleanup . helm-M-x--unwind-forms) (keymap keymap (keymap ...) keymap (29 . helm-M-x-toggle-short-doc) (21 . helm-M-x-universal-argument) keymap (127 . helm-mode-delete-char-backward-maybe) (27 keymap ...) (C-return . helm-cr-empty-string) keymap (f12 . #f(compiled-function () ... #&lt;bytecode 0x1ff580662211&gt;)) (f11 . #f(compiled-function () ... #&lt;bytecode 0x1ff5806621f9&gt;)) (f10 . #f(compiled-function () ... #&lt;bytecode 0x1ff5806621e1&gt;)) (f9 . #f(compiled-function () ... #&lt;bytecode 0x1ff5806621c9&gt;)) (f8 . #f(compiled-function () ... #&lt;bytecode 0x1ff5806621b1&gt;)) (f7 . #f(compiled-function () ... #&lt;bytecode 0x1ff580662199&gt;)) (f6 . #f(compiled-function () ... #&lt;bytecode 0x1ff580662181&gt;)) (f5 . #f(compiled-function () ... #&lt;bytecode 0x1ff580662169&gt;)) (f4 . #f(compiled-function () ... #&lt;bytecode 0x1ff580662151&gt;)) (f3 . #f(compiled-function () ... #&lt;bytecode 0x1ff580662139&gt;)) (f2 . #f(compiled-function () ... #&lt;bytecode 0x1ff580661de9&gt;)) (menu-bar keymap ...) (help keymap ...) (23 . helm-helm-yank-text-at-point-with-subkeys) (f1 . #f(compiled-function () ... #&lt;bytecode 0x1ff580661dd1&gt;)) (8 keymap ... ... ... ... ...) (20 . helm-toggle-resplit-and-swap-windows) (C-tab . undefined) (67108897 . helm-toggle-suspend-update) (3 keymap ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ...) (67108987 . helm-enlarge-window) ...) (action . helm-type-command-actions) (persistent-action . helm-M-x-persistent-action) (persistent-help . &quot;Describe this command&quot;) (help-message . helm-M-x-help-message) (requires-pattern . 0) (filtered-candidate-transformer helm-M-x-transformer-no-sort #f(compiled-function (candidates source) #&lt;bytecode 0x1ff5802f28dd&gt;) helm-fuzzy-highlight-matches) (volatile . t) (match identity) (fuzzy-match . t) (redisplay . identity) (nomark . t) (coerce . helm-symbolify) (header-line . &quot;C-j: Describe this command (keep...&quot;) (resume . helm-M-x-resume-fn) (multimatch . t) (must-match . t) (group . helm-command) (data . #f(compiled-function () #&lt;bytecode 0x1ff57fa90185&gt;)) (get-line . buffer-substring-no-properties) (search helm-mm-exact-search helm-mm-search helm-candidates-in-buffer-search-default-fn helm-fuzzy-search)) ((name . &quot;Emacs Commands&quot;) (init #f(compiled-function () #&lt;bytecode 0x1ff5800902e9&gt;)) (candidates . helm-candidates-in-buffer) (cleanup . helm-M-x--unwind-forms) (keymap keymap (keymap ...) keymap (29 . helm-M-x-toggle-short-doc) (21 . helm-M-x-universal-argument) keymap (127 . helm-mode-delete-char-backward-maybe) (27 keymap ...) (C-return . helm-cr-empty-string) keymap (f12 . #f(compiled-function () ... #&lt;bytecode 0x1ff580662211&gt;)) (f11 . #f(compiled-function () ... #&lt;bytecode 0x1ff5806621f9&gt;)) (f10 . #f(compiled-function () ... #&lt;bytecode 0x1ff5806621e1&gt;)) (f9 . #f(compiled-function () ... #&lt;bytecode 0x1ff5806621c9&gt;)) (f8 . #f(compiled-function () ... #&lt;bytecode 0x1ff5806621b1&gt;)) (f7 . #f(compiled-function () ... #&lt;bytecode 0x1ff580662199&gt;)) (f6 . #f(compiled-function () ... #&lt;bytecode 0x1ff580662181&gt;)) (f5 . #f(compiled-function () ... #&lt;bytecode 0x1ff580662169&gt;)) (f4 . #f(compiled-function () ... #&lt;bytecode 0x1ff580662151&gt;)) (f3 . #f(compiled-function () ... #&lt;bytecode 0x1ff580662139&gt;)) (f2 . #f(compiled-function () ... #&lt;bytecode 0x1ff580661de9&gt;)) (menu-bar keymap ...) (help keymap ...) (23 . helm-helm-yank-text-at-point-with-subkeys) (f1 . #f(compiled-function () ... #&lt;bytecode 0x1ff580661dd1&gt;)) (8 keymap ... ... ... ... ...) (20 . helm-toggle-resplit-and-swap-windows) (C-tab . undefined) (67108897 . helm-toggle-suspend-update) (3 keymap ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ...) (67108987 . helm-enlarge-window) ...) (action . helm-type-command-actions) (persistent-action . helm-M-x-persistent-action) (persistent-help . &quot;Describe this command&quot;) (help-message . helm-M-x-help-message) (requires-pattern . 0) (filtered-candidate-transformer helm-M-x-transformer-no-sort #f(compiled-function (candidates source) #&lt;bytecode 0x1ff5802f28dd&gt;) helm-fuzzy-highlight-matches) (volatile . t) (match identity) (fuzzy-match . t) (redisplay . identity) (nomark . t) (coerce . helm-symbolify) (header-line . &quot;C-j: Describe this command (keep...&quot;) (resume . helm-M-x-resume-fn) (multimatch . t) (must-match . t) (group . helm-command) (data . #f(compiled-function () #&lt;bytecode 0x1ff58026e131&gt;)) (get-line . buffer-substring-no-properties) (search helm-mm-exact-search helm-mm-search helm-candidates-in-buffer-search-default-fn helm-fuzzy-search))) nil &quot;M-x &quot; nil nil &quot;*helm M-x*&quot; nil nil helm-M-x-input-history) apply(helm ((((name . &quot;Emacs Commands history&quot;) (init #f(compiled-function () #&lt;bytecode 0x1ff58026e111&gt;)) (candidates . helm-candidates-in-buffer) (cleanup . helm-M-x--unwind-forms) (keymap keymap ... keymap ... ... keymap ... ... ... keymap ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ...) (action . helm-type-command-actions) (persistent-action . helm-M-x-persistent-action) (persistent-help . &quot;Describe this command&quot;) (help-message . helm-M-x-help-message) (requires-pattern . 0) (filtered-candidate-transformer helm-M-x-transformer-no-sort #f(compiled-function (candidates source) #&lt;bytecode 0x1ff5802f28dd&gt;) helm-fuzzy-highlight-matches) (volatile . t) (match identity) (fuzzy-match . t) (redisplay . identity) (nomark . t) (coerce . helm-symbolify) (header-line . &quot;C-j: Describe this command (keep...&quot;) (resume . helm-M-x-resume-fn) (multimatch . t) (must-match . t) (group . helm-command) (data . #f(compiled-function () #&lt;bytecode 0x1ff57fa90185&gt;)) (get-line . buffer-substring-no-properties) (search helm-mm-exact-search helm-mm-search helm-candidates-in-buffer-search-default-fn helm-fuzzy-search)) ((name . &quot;Emacs Commands&quot;) (init #f(compiled-function () #&lt;bytecode 0x1ff5800902e9&gt;)) (candidates . helm-candidates-in-buffer) (cleanup . helm-M-x--unwind-forms) (keymap keymap ... keymap ... ... keymap ... ... ... keymap ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ...) (action . helm-type-command-actions) (persistent-action . helm-M-x-persistent-action) (persistent-help . &quot;Describe this command&quot;) (help-message . helm-M-x-help-message) (requires-pattern . 0) (filtered-candidate-transformer helm-M-x-transformer-no-sort #f(compiled-function (candidates source) #&lt;bytecode 0x1ff5802f28dd&gt;) helm-fuzzy-highlight-matches) (volatile . t) (match identity) (fuzzy-match . t) (redisplay . identity) (nomark . t) (coerce . helm-symbolify) (header-line . &quot;C-j: Describe this command (keep...&quot;) (resume . helm-M-x-resume-fn) (multimatch . t) (must-match . t) (group . helm-command) (data . #f(compiled-function () #&lt;bytecode 0x1ff58026e131&gt;)) (get-line . buffer-substring-no-properties) (search helm-mm-exact-search helm-mm-search helm-candidates-in-buffer-search-default-fn helm-fuzzy-search))) nil &quot;M-x &quot; nil nil &quot;*helm M-x*&quot; nil nil helm-M-x-input-history)) helm(:sources (((name . &quot;Emacs Commands history&quot;) (init #f(compiled-function () #&lt;bytecode 0x1ff58026e111&gt;)) (candidates . helm-candidates-in-buffer) (cleanup . helm-M-x--unwind-forms) (keymap keymap (keymap ...) keymap (29 . helm-M-x-toggle-short-doc) (21 . helm-M-x-universal-argument) keymap (127 . helm-mode-delete-char-backward-maybe) (27 keymap ...) (C-return . helm-cr-empty-string) keymap (f12 . #f(compiled-function () ... #&lt;bytecode 0x1ff580662211&gt;)) (f11 . #f(compiled-function () ... #&lt;bytecode 0x1ff5806621f9&gt;)) (f10 . #f(compiled-function () ... #&lt;bytecode 0x1ff5806621e1&gt;)) (f9 . #f(compiled-function () ... #&lt;bytecode 0x1ff5806621c9&gt;)) (f8 . #f(compiled-function () ... #&lt;bytecode 0x1ff5806621b1&gt;)) (f7 . #f(compiled-function () ... #&lt;bytecode 0x1ff580662199&gt;)) (f6 . #f(compiled-function () ... #&lt;bytecode 0x1ff580662181&gt;)) (f5 . #f(compiled-function () ... #&lt;bytecode 0x1ff580662169&gt;)) (f4 . #f(compiled-function () ... #&lt;bytecode 0x1ff580662151&gt;)) (f3 . #f(compiled-function () ... #&lt;bytecode 0x1ff580662139&gt;)) (f2 . #f(compiled-function () ... #&lt;bytecode 0x1ff580661de9&gt;)) (menu-bar keymap ...) (help keymap ...) (23 . helm-helm-yank-text-at-point-with-subkeys) (f1 . #f(compiled-function () ... #&lt;bytecode 0x1ff580661dd1&gt;)) (8 keymap ... ... ... ... ...) (20 . helm-toggle-resplit-and-swap-windows) (C-tab . undefined) (67108897 . helm-toggle-suspend-update) (3 keymap ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ...) (67108987 . helm-enlarge-window) ...) (action . helm-type-command-actions) (persistent-action . helm-M-x-persistent-action) (persistent-help . &quot;Describe this command&quot;) (help-message . helm-M-x-help-message) (requires-pattern . 0) (filtered-candidate-transformer helm-M-x-transformer-no-sort #f(compiled-function (candidates source) #&lt;bytecode 0x1ff5802f28dd&gt;) helm-fuzzy-highlight-matches) (volatile . t) (match identity) (fuzzy-match . t) (redisplay . identity) (nomark . t) (coerce . helm-symbolify) (header-line . &quot;C-j: Describe this command (keep...&quot;) (resume . helm-M-x-resume-fn) (multimatch . t) (must-match . t) (group . helm-command) (data . #f(compiled-function () #&lt;bytecode 0x1ff57fa90185&gt;)) (get-line . buffer-substring-no-properties) (search helm-mm-exact-search helm-mm-search helm-candidates-in-buffer-search-default-fn helm-fuzzy-search)) ((name . &quot;Emacs Commands&quot;) (init #f(compiled-function () #&lt;bytecode 0x1ff5800902e9&gt;)) (candidates . helm-candidates-in-buffer) (cleanup . helm-M-x--unwind-forms) (keymap keymap (keymap ...) keymap (29 . helm-M-x-toggle-short-doc) (21 . helm-M-x-universal-argument) keymap (127 . helm-mode-delete-char-backward-maybe) (27 keymap ...) (C-return . helm-cr-empty-string) keymap (f12 . #f(compiled-function () ... #&lt;bytecode 0x1ff580662211&gt;)) (f11 . #f(compiled-function () ... #&lt;bytecode 0x1ff5806621f9&gt;)) (f10 . #f(compiled-function () ... #&lt;bytecode 0x1ff5806621e1&gt;)) (f9 . #f(compiled-function () ... #&lt;bytecode 0x1ff5806621c9&gt;)) (f8 . #f(compiled-function () ... #&lt;bytecode 0x1ff5806621b1&gt;)) (f7 . #f(compiled-function () ... #&lt;bytecode 0x1ff580662199&gt;)) (f6 . #f(compiled-function () ... #&lt;bytecode 0x1ff580662181&gt;)) (f5 . #f(compiled-function () ... #&lt;bytecode 0x1ff580662169&gt;)) (f4 . #f(compiled-function () ... #&lt;bytecode 0x1ff580662151&gt;)) (f3 . #f(compiled-function () ... #&lt;bytecode 0x1ff580662139&gt;)) (f2 . #f(compiled-function () ... #&lt;bytecode 0x1ff580661de9&gt;)) (menu-bar keymap ...) (help keymap ...) (23 . helm-helm-yank-text-at-point-with-subkeys) (f1 . #f(compiled-function () ... #&lt;bytecode 0x1ff580661dd1&gt;)) (8 keymap ... ... ... ... ...) (20 . helm-toggle-resplit-and-swap-windows) (C-tab . undefined) (67108897 . helm-toggle-suspend-update) (3 keymap ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ...) (67108987 . helm-enlarge-window) ...) (action . helm-type-command-actions) (persistent-action . helm-M-x-persistent-action) (persistent-help . &quot;Describe this command&quot;) (help-message . helm-M-x-help-message) (requires-pattern . 0) (filtered-candidate-transformer helm-M-x-transformer-no-sort #f(compiled-function (candidates source) #&lt;bytecode 0x1ff5802f28dd&gt;) helm-fuzzy-highlight-matches) (volatile . t) (match identity) (fuzzy-match . t) (redisplay . identity) (nomark . t) (coerce . helm-symbolify) (header-line . &quot;C-j: Describe this command (keep...&quot;) (resume . helm-M-x-resume-fn) (multimatch . t) (must-match . t) (group . helm-command) (data . #f(compiled-function () #&lt;bytecode 0x1ff58026e131&gt;)) (get-line . buffer-substring-no-properties) (search helm-mm-exact-search helm-mm-search helm-candidates-in-buffer-search-default-fn helm-fuzzy-search))) :prompt &quot;M-x &quot; :buffer &quot;*helm M-x*&quot; :history helm-M-x-input-history :truncate-lines t) helm-M-x-read-extended-command([0 olc wand isearch--state-pop-fun--cmacro locals 0 winring xselect--int-to-cons input-method-verbose-flag custom-face-menu guix tramp-find-user help-variable 0 evil-replace-alist 0 tramp-gvfs-handle-copy-file biblio-core adwaita defun-prompt-regexp winnow mixal encourage-mode tidal cl-print--preprocess charset-id-internal selinux-context edebug-clear-frequency-count tab-bar-select-tab DXT1 0 0 ---- evil-visual-exchange-corners docker-tramp 0 Edebug\ All\ Defs helm-kill-regexp-as-sexp helm-browse-project-build-buffers-source \&#39; tramp-rename-files osx-org-clock-menubar tramp-cache-data + evil-echo-area-message tramp-gvfs-unmount calc-embedded-mode-hook helm-buffers--get-tab-from-name evil-replace-state-local-map 0 ...]) helm-M-x(nil) funcall-interactively(helm-M-x nil) call-interactively(helm-M-x nil nil) command-execute(helm-M-x) </code></pre> <p>What i did wrong?</p> <p>my env: mac os 10-15-5, emacs 27.2</p> </div><!-- SC_ON --> &#32; submitted by &#32; <a href="https://www.reddit.com/user/ricardo_manar"> /u/ricardo_manar </a> <br/> <span><a href="https://www.reddit.com/r/emacs/comments/werb07/how_to_use_variables_in_custom_theme_file/">[link]</a></span> &#32; <span><a href="https://www.reddit.com/r/emacs/comments/werb07/how_to_use_variables_in_custom_theme_file/">[comments]</a></span>