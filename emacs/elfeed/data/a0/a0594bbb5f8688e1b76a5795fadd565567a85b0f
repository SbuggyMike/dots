<p>Over at the Emacs subreddit, FortunateDaughter_ notes that the <a href="https://www.reddit.com/r/emacs/comments/138kr5m/whats_that_email_client_doing_here/">Emacs “editor” has all sorts of other productivity tools</a>, such as email, built in and wonders why this is, what was the philosophy behind it, and whether users benefit from it rather than using dedicated tools focused on those applications.</p>
<p>The first thing that popped into my mind was the usual trope of Emacs being an operating system more than an editor. Of course, that’s with the understanding that being an “operating system” means simply that Emacs provides a unified interface to a wide range of everyday applications.</p>
<p>My own way of expressing this phenomenon is to say that Emacs is actually a light weight Lisp machine that includes an editor as one of its default applications. I think that that’s a more useful and accurate way of describing Emacs’ role. In any event, I was interested in the commenters’ reactions to FortunateDaughter_’s question.</p>
<p>No one used the term “Lisp machine” but several noted that what Emacs really does is provide a Lisp environment in which users can write or download applications to support their workflow. And, by the way, it includes a preinstalled editor.</p>
<p>Other commenters discussed whether or not Emacs adheres to the Unix philosophy. Cases can be made for either point of view but I’ve never been much concerned with the controversy: Emacs mostly does what I want it to do and when it doesn’t, it’s easy to extend it or find a preexisting package to make it do so.</p>
<p>So whether or not you think of it explicitly as a sort of Lisp Machine, it’s certainly true that Emacs provides a setting that lets you subsume most of your existing applications into a unified environment and makes it easy to add new ones.</p>