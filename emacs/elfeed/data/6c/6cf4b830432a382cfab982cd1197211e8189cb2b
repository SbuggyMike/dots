<!-- SC_OFF --><div class="md"><p>Here is a simple shell script for copying passwords, OTPs, and usernames from a keepassxc database to system clipboard. It uses <code>keepassxc-cli</code>, <code>pass</code>, and <code>rofi</code>. The password of the database is encrypted with user&#39;s gpg key. <code>pass</code> is used to decrypt it when user wants to read data from keepassxc database.</p> <p>rofi-keepassxc:</p> <pre><code>#!/bin/bash KEEPASSXC_PASS_PATH=&quot;passwords/misc/keepassxc/main&quot; KEEPASSXC_DATABASE_PATH=$(readlink -f ~/.config/keepassxc/main.kdbx) CLIP_TIMEOUT=&quot;45&quot; passCommand() { while getopts &quot;a:e:&quot; opt; do case &quot;$opt&quot; in a) ARGS=&quot;$OPTARG&quot; ;; e) ELEMENT=&quot;$OPTARG&quot; ;; *) echo &quot;ERROR: incorrect flag!&quot; ;; esac done : &quot;${ARGS=}&quot; COMMAND=&quot; pass ${KEEPASSXC_PASS_PATH} | keepassxc-cli clip ${ARGS} ${KEEPASSXC_DATABASE_PATH} ${secret} ${CLIP_TIMEOUT} &amp; notify-send --icon=dialog-information \&quot;${ELEMENT} is copied to clipboard!\&quot; &quot; eval ${COMMAND} } secret=$(pass &quot;${KEEPASSXC_PASS_PATH}&quot; | keepassxc-cli ls -R -f &quot;${KEEPASSXC_DATABASE_PATH}&quot; | sed -e &#39;/\/$/d&#39; -e &#39;/Recycle Bin/d&#39; | rofi -kb-custom-1 &quot;Alt+Return&quot; -kb-custom-2 &quot;Ctrl+Alt+Return&quot; -dmenu -p &quot;Secret&quot;) EXIT_CODE=&quot;$?&quot; if [ &quot;${EXIT_CODE}&quot; == &quot;0&quot; ]; then passCommand -e &quot;Password&quot; elif [ &quot;${EXIT_CODE}&quot; == &quot;10&quot; ]; then passCommand -e &quot;OTP&quot; -a &quot;-t&quot; elif [ &quot;${EXIT_CODE}&quot; == &quot;11&quot; ]; then passCommand -e &quot;Username&quot; -a &quot;-a username&quot; fi </code></pre> <p>P.S. I know that I can use <code>pass</code> and <code>rofi</code> to achieve a similar goal but I think the keepassxc approach is more secure. In case you want to only use <code>pass</code> and <code>rofi</code>, here is the shell script I used to use.</p> <p>rofi-pass:</p> <pre><code>#!/bin/bash password_store=&quot;$(readlink -f ${HOME}/.password-store)&quot; listgpg () { mapfile -d &#39;&#39; pw_list &lt; &lt;(find -L . -name &#39;*.gpg&#39; -print0) pw_list=(&quot;${pw_list[@]#./}&quot;) printf &#39;%s\n&#39; &quot;${pw_list[@]}&quot; | sort -n } # get all password files and output as newline-delimited text list_passwords() { cd &quot;${root}&quot; || exit mapfile -t pw_list &lt; &lt;(listgpg) printf &#39;%s\n&#39; &quot;${pw_list[@]%.gpg}&quot; | sort -n } pushd &quot;${password_store}&quot; secret=$(list_passwords | rofi -dmenu -p &quot;Secret&quot; ) if [[ ${secret} == otps/* ]]; then [ ! -z &quot;${secret}&quot; ] &amp;&amp; pass otp -c &quot;${secret}&quot; &amp;&amp; notify-send --icon=dialog-information &quot;OTP is copied to clipboard!&quot; else [ ! -z &quot;${secret}&quot; ] &amp;&amp; pass -c &quot;${secret}&quot; &amp;&amp; notify-send --icon=dialog-information &quot;Password is copied to clipboard!&quot; fi popd </code></pre> </div><!-- SC_ON --> &#32; submitted by &#32; <a href="https://www.reddit.com/user/i8ad8"> /u/i8ad8 </a> <br/> <span><a href="https://www.reddit.com/r/archlinux/comments/w5ybgu/simple_shell_script_for_copying_passwords_from/">[link]</a></span> &#32; <span><a href="https://www.reddit.com/r/archlinux/comments/w5ybgu/simple_shell_script_for_copying_passwords_from/">[comments]</a></span>