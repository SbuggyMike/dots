<p>Yi Tang has an <a href="http://yitang.uk/2022/07/31/mle-copy-files-to-local-machine/">interesting post</a> on the <a href="https://github.com/stsquad/dired-rsync">dired-rsync</a> package. It’s been around for a while, apparently, but I hadn’t heard of it before Tang’s post. The TL;DR is it allows you to use <code>rsync</code> in dired in the same contexts that you would otherwise use Copy.</p>
<p>Tang lists all sorts of reasons why he believes <code>rsync</code> is superior to <code>cp</code> and <code>scp</code> but, oddly, doesn’t mention the major one: <code>rsync</code> only send the parts of the file that are different from the target. It is, in short, a tool optimized for copying an updated file.</p>
<p>Much of the post is devoted to explaining how Tang has integrated the package into his workflow. It’s perfect for downloading large data files from a server to his local machine where he can manipulate and analyze them. He explains how he set everything up in case you have a similar use case and want to recreate his workflow.</p>
<p>It’s a nice post that also explains some of the gotchas if you want to use dired-rsync yourself. It’s on Melpa and setting it up is simple. You can simply copy Tang’s <code>use-package</code> configuration for an excellent starting—or permanent—setup.</p>