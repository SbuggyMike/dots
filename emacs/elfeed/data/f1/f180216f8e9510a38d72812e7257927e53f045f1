<!-- SC_OFF --><div class="md"><p>Update: <a href="/u/dartvader316">u/dartvader316</a> has given a much more robust, efficient, and safe method to do this - just use the good old <code>fdisk</code>. There&#39;s an <code>f</code> &quot;fix&quot; command behind <code>x</code> &quot;expert commands&quot;. <a href="https://www.reddit.com/r/linux/comments/weknpm/comment/iiorcbu/?utm_source=share&amp;utm_medium=web2x&amp;context=3">Here is his comment</a>.</p> <p>TLDR: Rearrange ugly partition names based on start blocks with either of my programs - a <a href="https://github.com/artnoi43/sfdisk-sort-rs">Rust version</a>, or a <a href="https://github.com/artnoi43/sfdisk-sort-go">Go version</a>. Both programs have tests :D</p> <p>Hello everyone! I&#39;m an Arch user who uses it on my every computer, and thanks to my exposure to Linux and OpenBSD, I&#39;ve been very in love with software, especially free and minimal software! I was a finance student, but now I work as a Go backend developer for a Web3 product for almost 1 year.</p> <p>If you are anything like me, then you&#39;d partition the hell out of your disks!</p> <p>And there&#39;s always one annoyance that comes with partitioning if you are obssessed with order - that is, ugly partition table!</p> <p>After setting up your perfect disk layout months or years ago, you may have come a across a situation where you need to repartition your perfect pretty disk, and thus, ruining the numbering and triggering your anxiety.</p> <p>You might end up with <code>sda7</code> at the very start of your disk, and you want to change it to <code>sda1</code>. <strong>I have postponed resizing and creating new partitions in the past just because I want the partition names to be in order..</strong></p> <p>One way to take on this is to use <code>sfdisk</code> (part of <code>util-linux</code>), as in this <a href="https://unix.stackexchange.com/questions/18752/change-the-number-of-the-partition-from-sda1-to-sda2">StackExchange answer</a>.</p> <p>To put it simply, it involves you dumping the <code>sfdisk -d</code> output to a file, and then manually editing the partition names yourself. But this becomes tiresome and error-prone, if you have a lot of partitions.</p> <p>So I wrote 2 programs to do this, based on this exact same strategy in StackExchange. Each one is a clone of the other (they do the same thing), albeit with minor diffrences. You could say that they&#39;re in the same domain, but has different implementation.</p> <p>I first wrote the small, one-file Go code (<a href="https://github.com/artnoi43/sfdisk-sort-go"><code>sfdisk-sort-go</code></a>) to help me emulate the <em>editing <code>sfdisk -d</code> output</em> from the <a href="https://unix.stackexchange.com/questions/18752/change-the-number-of-the-partition-from-sda1-to-sda2">StackExchange answer</a>. <strong>I wrote it in one file because I really want it to be portable, run, and easily shareable</strong>.</p> <p>Then last week I got COVID and had nothing good to do, so I started learning Rust by writing the <a href="https://github.com/artnoi43/sfdisk-sort-rs">clone of the previous Go script in Rust</a>. I also wanted to learn about Rust module system and want to maintain this one for a long time, so this time it&#39;s not in one file.</p> <h2>How both work</h2> <p>Keep in mind that the scripts only process texts. This is an example of what the scripts do, suppose you have this <em>ugly</em> disk (you can get this text output by running <code># sfdisk -d /dev/sda</code>):</p> <p>``` label: gpt label-id: 12345678-2345-6969-3264-A55555555555 device: /dev/sda unit: sectors first-lba: 2048 last-lba: 976773134 sector-size: 512</p> <p>/dev/sda1 : start= 411648, size= 67108864, type=0FC63DAF-8483-4772-8E79-3D69D8477DE4, uuid=FFFFFFFF-GGGG-HHHH-IIII-JJJJJJJJJJJJ /dev/sda2 : start= 2048, size= 409600, type=C12A7328-F81F-11D2-BA4B-00A0C93EC93B, uuid=AAAAAAAA-BBBB-CCCC-DDDD-EEEEEEEEEEEE /dev/sda4 : start= 101074944, size= 875698191, type=6A85CF4D-1DD2-11B2-99A6-080020736631, uuid=PPPPPPPP-QQQQ-RRRR-SSSS-TTTTTTTTTTTT /dev/sda5 : start= 67520512, size= 33554432, type=0FC63DAF-8483-4772-8E79-3D69D8477DE4, uuid=KKKKKKKK-LLLL-MMMM-NNNN-OOOOOOOOOOOO ```</p> <p>As you can see, the partition names are pretty ugly. <code>sda1</code> starts at 411648, yet its name imply that it&#39;s some how starts <em>before</em> <code>sda2</code>, which starts at 2048. If you pipe this output to either of my programs, then it&#39;ll spit this out:</p> <p>``` label: gpt label-id: 12345678-2345-6969-3264-A55555555555 device: /dev/sda unit: sectors first-lba: 2048 last-lba: 976773134 sector-size: 512</p> <p>/dev/sda1 : start= 2048, size= 409600, type=C12A7328-F81F-11D2-BA4B-00A0C93EC93B, uuid=AAAAAAAA-BBBB-CCCC-DDDD-EEEEEEEEEEEE /dev/sda2 : start= 411648, size= 67108864, type=0FC63DAF-8483-4772-8E79-3D69D8477DE4, uuid=FFFFFFFF-GGGG-HHHH-IIII-JJJJJJJJJJJJ /dev/sda3 : start= 67520512, size= 33554432, type=0FC63DAF-8483-4772-8E79-3D69D8477DE4, uuid=KKKKKKKK-LLLL-MMMM-NNNN-OOOOOOOOOOOO /dev/sda4 : start= 101074944, size= 875698191, type=6A85CF4D-1DD2-11B2-99A6-080020736631, uuid=PPPPPPPP-QQQQ-RRRR-SSSS-TTTTTTTTTTTT ```</p> <p>Wow, nice and pretty!</p> <p>So, each of my programs parses the <code>sfdisk -d</code> output, and sorts the partitions based on start block, and then printing the whole thing back out to stdout.</p> <p>You can then use <code>sfdisk</code> to read this output text (of sorted partitions) and apply it to your partition table. And boom, your disk partitions are now in order!</p> <blockquote> <p>My programs only do text processing - your partition table is untouched. It is up to you to use <code>sfdisk</code> to apply the change.</p> </blockquote> <h2>Caveats</h2> <p>The Rust version supports <code>sdXY</code>, <code>vdXY</code>, <code>nvmeXnYpZ</code>, and <code>mmcblkXpY</code> schemes, while the Go version only supports basic names (without the &#39;p&#39; like <code>sdXY</code> and <code>vdXY</code>) AND <code>nvmeXnYpZ</code>, and will probably be buggy with <code>mmcblkXpY</code> because I did not add the exception for it in the Go version.</p> <p>The Rust version does have more tests, and in my opinion is more robust for newer Linux block device names, and adding new scheme support is a lot more easily done because of how the code is designed.</p> <h2>Usage</h2> <p>So, the basic workflow of this script is simple:</p> <p><code> $ # First, you dump the partition table to a backup file: $ sudo sfdisk -d /dev/sdb &gt; sdb.original.bkp $ $ # Then you pipe the text to the program, $ # and redirect the script output to a new file $ cat sdb.original.bkp | sfdisk-sort-rs &gt; sdb.sorted $ $ # And use sfdisk to apply changes to the partition table: $ sudo sfdisk /dev/sdb &lt; sdb.sorted $ $ # If the above command did not work, try this: $ sudo sfdisk --no-reread -f /dev/sdb &lt; sdb.sorted </code></p> <p>You should exercise basic caution - the disk&#39;s partitions (all of them) must not be currently in use, i.e. mounted.</p> <p>So if your OS root is all on <code>/dev/sda</code>, and you want to rearrange <code>/dev/sdb</code> or <code>/dev/nvme0n2</code>, then that is easily safe and doable. But if you want to rearrange your root disk, then you&#39;ll have to boot and run the either of the scripts from somewhere else.</p> <h2>Difference between the Go and Rust versions</h2> <ol> <li><p>Other than source file structure, there&#39;re big differences between the two. The Rust version uses regex to parse text, while the Go version just performs manual parsing with whitespace splitting etc.</p></li> <li><p>The Rust version is also written in a longer period of time and can be a lot more easily maintained.</p></li> <li><p>The Go version can also <code>sfdisk -d</code> by its own, eliminating the need to pipe <code>sfdisk -d</code> output to the script. The Rust version only gets its input from stdin.</p></li> </ol> <p>Any recommendation is welcome! I have only been coding for a little over a year, and this is my first Rust program, so you know, sometimes the code may smell or not idiomatic.</p> <p>edit: typos, and readability</p> </div><!-- SC_ON --> &#32; submitted by &#32; <a href="https://www.reddit.com/user/artnoi43"> /u/artnoi43 </a> <br/> <span><a href="https://www.reddit.com/r/linux/comments/weknpm/i_just_wrote_rustgo_programs_to_help/">[link]</a></span> &#32; <span><a href="https://www.reddit.com/r/linux/comments/weknpm/i_just_wrote_rustgo_programs_to_help/">[comments]</a></span>