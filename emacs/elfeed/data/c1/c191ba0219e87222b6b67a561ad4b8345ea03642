<!-- SC_OFF --><div class="md"><p>Announcing my new tool: <a href="https://github.com/vi/netns_tcp_bridge">netns_tcp_bridge</a>. It is a TCP forwarding proxy that can cross <a href="https://man7.org/linux/man-pages/man7/network_namespaces.7.html">linux network namespace</a> barriers.</p> <p>Obviously, it can be done (with better performance) by using kernel itself (e.g. <a href="https://man7.org/linux/man-pages/man4/veth.4.html">veth</a>), but sometimes you may want just one temporary TCP connection in otherwise isolated namespace and do not want to deal with additional interfaces and IP addresses.</p> <p>It works similar to other userland TCP forwarders, but passes all incoming accepted sockets using <a href="https://man7.org/linux/man-pages/man7/unix.7.html"><code>SCM_RIGHTS</code></a> to its counterpart process.</p> <p>Example invocation: <code>netns_tcp_bridge -l 127.0.0.1:8000 -f /proc/1234/ns/net -c 127.0.0.1:8000 -t /proc/1235/ns/net</code></p> </div><!-- SC_ON --> &#32; submitted by &#32; <a href="https://www.reddit.com/user/vi0oss"> /u/vi0oss </a> <br/> <span><a href="https://www.reddit.com/r/linux/comments/wjp2rw/new_little_tool_netns_tcp_bridge/">[link]</a></span> &#32; <span><a href="https://www.reddit.com/r/linux/comments/wjp2rw/new_little_tool_netns_tcp_bridge/">[comments]</a></span>