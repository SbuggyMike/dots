<p>I’ve written a <a href="https://irreal.org/blog/?p=11261">couple</a> of <a href="https://irreal.org/blog/?p=11267">posts</a> about Álvaro Ramírez’s implementation of Emacs shells for ChatGPT and DALL-E. After he wrote those, he noticed that they shared a lot of code so, of course, <a href="https://xenodium.com/a-shell-maker/">he abstracted that code out into a separate package of functions</a>.</p>
<p>The result is a wrapper around <a href="https://www.gnu.org/software/emacs/manual/html_node/emacs/Shell-Mode.html">comint</a>, <code>shell-maker</code>, that makes it easy to build a specialized shell. He offers a trivial example of a shell, <code>greeter-shell</code> that accepts a name, <i>X</i>, and responds with <code>Hello "/X/"</code>. That’s not terribly useful, of course, but it takes just a few lines of code—most of it boilerplate—to implement.</p>
<p>Right now <code>shell-maker</code> is bundled with <code>chatgpt-shell</code> but Ramírez says he will break it out to a separate package if there’s enough interest. Regardless, if you want to implement a specialized shell—whether or not it’s in service of the hot new AI apps—the <code>shell-maker</code> package is an easy way to do that without worrying about the intricacies of Comint. Take a look at Ramírez’s post for the details.</p>