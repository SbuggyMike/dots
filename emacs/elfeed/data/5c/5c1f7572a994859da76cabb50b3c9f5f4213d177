<!-- SC_OFF --><div class="md"><p>I watched <a href="https://www.youtube.com/watch?v=NocDm4zzToo">this video</a> recently and it was great, really helped clear up some concepts that have always confused me.</p> <p>I wanted to post my current understanding here, to check whether my understanding is correct? I feel like I&#39;m still not 100% getting it.</p> <p>In elisp there are two distinct namespaces: one for functions and one for variables. This means I can have a variable called <code>foobar</code> and also a function called <code>foobar</code>, and they won&#39;t interfere with one another.</p> <p>If I want to evaluate a variable, then I just write the variable - eg <code>foobar</code>. If I want to evaluate a function, then I include it within parentheses (with arguments as needed) - eg <code>(foobar arg1 arg2)</code>.</p> <p>If I want to refer to the symbol of a variable, then I prepend it with a quote - eg <code>&#39;foobar</code>. If I want to refer to the symbol of function, then I prepend it with a hash and quote - eg <code>#&#39;foobar</code>.</p> <p>Lambdas are something of a mish-mash: they allow me to set the value of a variable to be a function, that will itself be called each time that variable is evaluated.</p> <p>Is that about it? Would love any feedback around where my understanding may have gone awry.</p> </div><!-- SC_ON --> &#32; submitted by &#32; <a href="https://www.reddit.com/user/Shimmy-choo"> /u/Shimmy-choo </a> <br/> <span><a href="https://www.reddit.com/r/emacs/comments/vyshp7/am_i_understanding_elisp_right/">[link]</a></span> &#32; <span><a href="https://www.reddit.com/r/emacs/comments/vyshp7/am_i_understanding_elisp_right/">[comments]</a></span>