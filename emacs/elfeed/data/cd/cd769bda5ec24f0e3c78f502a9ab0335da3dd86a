<p>Torstein Johansen has a <a href="https://www.youtube.com/watch?v=K2dAZ227GY8&amp;t=1s">short video that addresses the question of why he uses Emacs in 2022</a>. The backstory is that every time he takes a new job or consulting position, the incumbents—who all use things like IntelliJ, Eclipse, or even VS Code—stare in disbelief when they see he is using Emacs and lecture him on how much more efficient he could be if he was using a Modern Editor<img alt="™" class="wp-smiley" src="https://s.w.org/images/core/emoji/14.0.0/72x72/2122.png" style="height: 1em;" />.</p>
<p>Johansen disagrees. Maybe, he says, there isn’t a button in Emacs to automatically refactor a section of code—although such a thing could be, and perhaps has been, implemented by any user who feels the need—but what Emacs offers is speed. Speed in the sense of being the shortest path between your brain and what appears on the screen.</p>
<p>Johansen also makes the familiar point that Emacs has a consistent set of shortcuts that work for virtually all the packages that run inside it. Those shortcuts allow efficient navigation of editing of whatever buffer happens to have focus. He notes that this is so comfortable that Emacs users typically try to stay within Emacs as much as possible.</p>
<p>This leads to the well-known phenomena of Emacs users trying to migrate as many tasks as possible to within Emacs. Johansen considers himself “a bit out there” because he handles his email from within Emacs. I found that amusing since I do the same and more. As I said many times, virtually all my tube time is spent in either Emacs or the browser and I’ve <a href="https://irreal.org/blog/?p=9019">migrated as many Emacs shortcuts as possible to the browser and other macOS utilities</a>.</p>
<p>The kids can say whatever they want about their fancy editors but the fact remains <a href="http://irreal.org/blog/?p=697">most serious programmers use Emacs or Vim</a>.</p>