;;-*-coding: utf-8;-*-
(define-abbrev-table 'global-abbrev-table
  '(
    ("'f1d" "'fiduciary" nil :count 8)
    ("'migth" "might" nil :count 1)
    ("'tlak" "talk" nil :count 1)
    ("'woudl" "woudl" nil :count 2)
    ("0ms" "Ombudsman" nil :count 53)
    ("aagainst" "against" nil :count 1)
    ("ablance" "balance" nil :count 1)
    ("abotu" "about" nil :count 2)
    ("absis" "basis" nil :count 1)
    ("accountacy" "accountancy" nil :count 1)
    ("accoutn" "account" nil :count 2)
    ("accrodingly" "accordingly" nil :count 1)
    ("accrods" "accords" nil :count 1)
    ("acocunt" "account" nil :count 1)
    ("additaionlly" "additionally" nil :count 1)
    ("adivce" "advice" nil :count 1)
    ("adn" "and" nil :count 10)
    ("adotped" "adopted" nil :count 1)
    ("advicating" "advocating" nil :count 1)
    ("afr" "far" nil :count 1)
    ("agaisnt" "against" nil :count 3)
    ("agian" "again" nil :count 2)
    ("ahd" "had" nil :count 10)
    ("ahnds" "hands" nil :count 1)
    ("ahs" "has" nil :count 7)
    ("ahve" "have" nil :count 51)
    ("ahven't" "haven't" nil :count 2)
    ("ahving" "having" nil :count 1)
    ("aks" "ask" nil :count 3)
    ("allwo" "allow" nil :count 1)
    ("alos" "also" nil :count 5)
    ("althogh" "although" nil :count 1)
    ("alw" "law" nil :count 9)
    ("alys" "lays" nil :count 1)
    ("ambiguos" "ambiguous" nil :count 1)
    ("amd" "and" nil :count 1)
    ("amde" "made" nil :count 2)
    ("amke" "make" nil :count 1)
    ("amnedment" "amendment" nil :count 1)
    ("amoutn" "amount" nil :count 2)
    ("anohter" "another" nil :count 1)
    ("antoher" "another" nil :count 4)
    ("appela" "Appeal" nil :count 2)
    ("appelants" "appellants" nil :count 1)
    ("appraoch" "approach" nil :count 5)
    ("appraochig" "approach" nil :count 1)
    ("appraoching" "approaching" nil :count 1)
    ("aprt" "part" nil :count 2)
    ("aprty" "party" nil :count 1)
    ("assests" "assets" nil :count 1)
    ("assistnace" "Assitance" nil :count 3)
    ("atht" "that" nil :count 2)
    ("attact" "attract" nil :count 1)
    ("attned" "attend" nil :count 1)
    ("attnetion" "attention" nil :count 1)
    ("auguest" "August" nil :count 1)
    ("auhtors" "authors" nil :count 1)
    ("authoirty" "authority" nil :count 1)
    ("authortieis" "authorities" nil :count 1)
    ("authortiy" "authority" nil :count 1)
    ("avlid" "valid" nil :count 1)
    ("b3" "beneficiary" nil :count 41)
    ("b3s" "beneficiaries" nil :count 257)
    ("baeen" "been" nil :count 1)
    ("baout" "about" nil :count 5)
    ("baove" "above" nil :count 1)
    ("bassi" "basis" nil :count 4)
    ("batthle" "battle" nil :count 1)
    ("bceause" "because" nil :count 3)
    ("beacuse" "because" nil :count 5)
    ("becomign" "becoming" nil :count 1)
    ("beign" "begin" nil :count 1)
    ("bemcoe" "become" nil :count 1)
    ("benefitted" "benefited" nil :count 1)
    ("bleow" "below" nil :count 1)
    ("bneefits" "benefits" nil :count 1)
    ("boht" "both" nil :count 1)
    ("braodly" "broadly" nil :count 1)
    ("btoh" "both" nil :count 2)
    ("c0m" "company" nil :count 46)
    ("c0mm" "committee" nil :count 2)
    ("c0ms" "companies" nil :count 9)
    ("c0n" "contract" nil :count 130)
    ("c0ns" "contracts" nil :count 30)
    ("c0rp" "corporation." nil :count 1)
    ("c0t" "court" nil :count 180)
    ("c0ts" "courts" nil :count 59)
    ("c1rcs" "circumstances" nil :count 33)
    ("cahllenge" "challenge" nil :count 1)
    ("cahnging" "changing" nil :count 1)
    ("cahpter" "chapter" nil :count 1)
    ("cahrge" "charge" nil :count 1)
    ("calim" "claim" nil :count 6)
    ("calss" "class" nil :count 4)
    ("caluse" "clause" nil :count 2)
    ("capabel" "capable" nil :count 1)
    ("certian" "certain" nil :count 2)
    ("certina" "certain" nil :count 2)
    ("chagne" "change" nil :count 1)
    ("challegne" "challenge" nil :count 1)
    ("circumstnaces" "circumstances" nil :count 4)
    ("cirx" "circumstances" nil :count 2)
    ("claer" "clear" nil :count 1)
    ("clairty" "clarity" nil :count 1)
    ("clamaint" "claimant" nil :count 1)
    ("cleraity" "clarity" nil :count 1)
    ("clsoe" "close" nil :count 1)
    ("cna" "can" nil :count 4)
    ("cnotext" "context" nil :count 1)
    ("coa" "Court of Appeal" nil :count 31)
    ("comapnay" "company" nil :count 1)
    ("comapnies" "companies" nil :count 1)
    ("comapny" "company" nil :count 8)
    ("comended" "commended" nil :count 1)
    ("commercail" "commercial" nil :count 1)
    ("commerical" "commercial" nil :count 2)
    ("comming" "coming" nil :count 1)
    ("commmon" "common" nil :count 1)
    ("compesnation" "compensation" nil :count 1)
    ("compyl" "comply" nil :count 1)
    ("concerend" "concerned" nil :count 3)
    ("concultant" "consultant" nil :count 1)
    ("conincide" "conincide" nil :count 1)
    ("consdider" "consider" nil :count 1)
    ("consdier" "consider" nil :count 1)
    ("consdieration" "consideration" nil :count 1)
    ("consdierations" "considerations" nil :count 8)
    ("consdiering" "considering" nil :count 1)
    ("consequecnes" "consequences" nil :count 1)
    ("conseuqences" "consequences" nil :count 1)
    ("consideratoin" "consideration" nil :count 1)
    ("constrasting" "contrasting" nil :count 1)
    ("constriant" "constraint" nil :count 3)
    ("constrinat" "constraint" nil :count 1)
    ("constrinats" "constraints" nil :count 1)
    ("constructiuon" "construction" nil :count 1)
    ("contribtutions" "contributions" nil :count 1)
    ("contributiosn" "contributions" nil :count 2)
    ("contributoyr" "contributory" nil :count 1)
    ("cosntraint" "constraint" nil :count 2)
    ("cosntraints" "constraints" nil :count 4)
    ("coudl" "could" nil :count 3)
    ("coulnd't" "couldn't" nil :count 1)
    ("cpaital" "Capital" nil :count 1)
    ("d0c" "document" nil :count 25)
    ("d0x" "documents" nil :count 102)
    ("debtis" "debits" nil :count 1)
    ("decisiosn" "decisions" nil :count 1)
    ("decisoin" "decision" nil :count 9)
    ("decisoins" "decisions" nil :count 1)
    ("decsion" "decision" nil :count 1)
    ("decsisions" "decisions" nil :count 1)
    ("defernece" "deference" nil :count 2)
    ("defintion" "definition" nil :count 1)
    ("delcared" "declared" nil :count 1)
    ("dennign" "denning" nil :count 1)
    ("determiend" "determined" nil :count 3)
    ("determinign" "determinining" nil :count 3)
    ("detroyed" "destroyed" nil :count 1)
    ("dferred" "deferred" nil :count 1)
    ("diea" "idea" nil :count 2)
    ("differnece" "difference" nil :count 3)
    ("dimisished" "diminished" nil :count 1)
    ("direcotr" "director" nil :count 1)
    ("disucssions" "discussions" nil :count 2)
    ("docuemnts" "documents" nil :count 1)
    ("documetn" "document" nil :count 1)
    ("downlaod" "download" nil :count 1)
    ("dpt" "department" nil :count 1)
    ("duaghter" "daughter" nil :count 1)
    ("dutoes" "duties" nil :count 1)
    ("duyt" "duty" nil :count 1)
    ("e33" "employee" nil :count 47)
    ("e33s" "employees" nil :count 44)
    ("e3r" "employer" nil :count 199)
    ("e3r's" "employer's" nil :count 7)
    ("e3rs" "employers" nil :count 104)
    ("e3t" "employment" nil :count 112)
    ("eb" "be" nil :count 11)
    ("ebcause" "because" nil :count 1)
    ("ebst" "best" nil :count 3)
    ("edecision" "decision" nil :count 1)
    ("effecitve" "effective" nil :count 1)
    ("efffectiveness" "effectiveness" nil :count 1)
    ("eg" "e.g.," nil :count 47)
    ("elemtn" "element" nil :count 1)
    ("elvel" "level" nil :count 1)
    ("emial" "email" nil :count 1)
    ("englsih" "English" nil :count 1)
    ("enoguh" "enough" nil :count 1)
    ("ensrue" "ensure" nil :count 1)
    ("ential" "entail" nil :count 1)
    ("epople" "people" nil :count 1)
    ("epxenses" "expenses" nil :count 1)
    ("epxlicit" "explicit" nil :count 1)
    ("epxlored" "explored" nil :count 1)
    ("equalyl" "equally" nil :count 1)
    ("erlate" "relate" nil :count 1)
    ("ersolution" "resolution" nil :count 1)
    ("esoppel" "estoppel" nil :count 1)
    ("establiisehd" "established" nil :count 1)
    ("establsihed" "established" nil :count 2)
    ("estbalished" "established" nil :count 1)
    ("estbalishing" "establishing" nil :count 1)
    ("evaulate" "evaluate" nil :count 1)
    ("evne" "even" nil :count 1)
    ("ewhc" "EWHC" nil :count 2)
    ("execptional" "exceptional" nil :count 1)
    ("exepnses" "expenses" nil :count 1)
    ("expalined" "explained" nil :count 1)
    ("experieence" "experience" nil :count 1)
    ("extnet" "extent" nil :count 1)
    ("f1d" "fiduciary" nil :count 295)
    ("f1ds" "Fiduciaries" nil :count 32)
    ("facotr" "factor" nil :count 1)
    ("facotrs" "factors" nil :count 1)
    ("faiult" "fault" nil :count 1)
    ("favourtie" "favourite" nil :count 1)
    ("fcat" "fact" nil :count 1)
    ("fi" "if" nil :count 5)
    ("fiath" "faith" nil :count 4)
    ("finaincial" "financial" nil :count 1)
    ("fincnailly" "financially" nil :count 1)
    ("fo" "of" nil :count 71)
    ("foraml" "formal" nil :count 1)
    ("freqest" "frequent" nil :count 1)
    ("frist" "first" nil :count 5)
    ("fucntions" "functions" nil :count 1)
    ("furher" "further" nil :count 1)
    ("furhter" "further" nil :count 1)
    ("furhtermore" "Furthermore" nil :count 1)
    ("givne" "given" nil :count 2)
    ("gnetry" "gentry" nil :count 1)
    ("gorup" "group" nil :count 1)
    ("gorups" "groups" nil :count 1)
    ("govertning" "governing" nil :count 1)
    ("govt" "government" nil :count 26)
    ("helath" "health" nil :count 2)
    ("helfpful" "helpful." nil :count 1)
    ("helfpul" "helpful" nil :count 1)
    ("hgiher" "higher" nil :count 2)
    ("highlihgts" "highlights" nil :count 1)
    ("hihg" "high" nil :count 1)
    ("hihglighting" "highlighting" nil :count 1)
    ("hihgly" "highly" nil :count 2)
    ("hlep" "help" nil :count 1)
    ("hodlers" "holders" nil :count 1)
    ("hodls" "holds" nil :count 1)
    ("hol" "House of Lords" nil :count 6)
    ("holdigns" "Holdings" nil :count 1)
    ("hospials" "hospitals" nil :count 1)
    ("howevre" "However" nil :count 1)
    ("hsare" "share" nil :count 1)
    ("hse" "she" nil :count 3)
    ("hsi" "his" nil :count 1)
    ("hsould" "should" nil :count 16)
    ("htat" "that" nil :count 16)
    ("hte" "the" nil :count 111)
    ("hteir" "their" nil :count 1)
    ("htere" "there" nil :count 4)
    ("htey" "they" nil :count 12)
    ("htinks" "thinks" nil :count 1)
    ("htis" "this" nil :count 19)
    ("htose" "those" nil :count 1)
    ("htye" "they" nil :count 3)
    ("hvae" "have" nil :count 11)
    ("hvaing" "having" nil :count 1)
    ("hve" "have" nil :count 2)
    ("hwcih" "which" nil :count 1)
    ("hwere" "where" nil :count 6)
    ("hwich" "which" nil :count 12)
    ("hwihc" "which" nil :count 2)
    ("hwom" "whom" nil :count 1)
    ("icnlude" "include" nil :count 1)
    ("icnluding" "including" nil :count 1)
    ("icnrease" "increase" nil :count 2)
    ("icnreases" "increases" nil :count 1)
    ("idenfitied" "identified" nil :count 1)
    ("ie" "i.e.," nil :count 52)
    ("illegitiamte" "illegitimate" nil :count 1)
    ("imapct" "impact" nil :count 1)
    ("improtance" "importance" nil :count 1)
    ("inappripriate" "inappropriate" nil :count 1)
    ("incentiveised" "incentivised" nil :count 1)
    ("incl" "including" nil :count 1)
    ("incldue" "include" nil :count 1)
    ("incldued" "included" nil :count 3)
    ("incldues" "includes" nil :count 1)
    ("includign" "including" nil :count 2)
    ("indentified" "identified" nil :count 1)
    ("indepdent" "independent" nil :count 1)
    ("industrail" "industrial" nil :count 1)
    ("industy" "industry" nil :count 1)
    ("initilaly" "initially" nil :count 1)
    ("inlcuded" "included" nil :count 1)
    ("inlcuding" "including" nil :count 2)
    ("innvestment" "Investment" nil :count 1)
    ("inot" "into" nil :count 2)
    ("instaed" "instead" nil :count 1)
    ("instnace" "instance" nil :count 3)
    ("instnacnes" "instances" nil :count 1)
    ("instruciton" "instruction" nil :count 1)
    ("interepretation" "interpretation" nil :count 3)
    ("intereven" "intervene" nil :count 3)
    ("interevene" "intervene" nil :count 2)
    ("intnetion" "intention" nil :count 1)
    ("introudction" "Introduction" nil :count 1)
    ("intvestmnet" "investment" nil :count 1)
    ("investiage" "investigate" nil :count 1)
    ("investmnet" "investment" nil :count 6)
    ("invlaid" "invalid" nil :count 1)
    ("invlaidation" "invalidation" nil :count 1)
    ("invovle" "involve" nil :count 1)
    ("ionstructions" "instructions" nil :count 1)
    ("iontroduction" "introduction" nil :count 1)
    ("isntnace" "instance" nil :count 1)
    ("itnensity" "intensity" nil :count 1)
    ("itnerest" "interest" nil :count 2)
    ("itnerests" "interests" nil :count 10)
    ("itnerpretation" "interpretation" nil :count 2)
    ("itnerpreting" "interpreting" nil :count 1)
    ("iuncluding" "including" nil :count 1)
    ("iwll" "will." nil :count 1)
    ("iwth" "with" nil :count 5)
    ("j" "J" nil :count 221)
    ("jduge" "judge" nil :count 2)
    ("jdugement" "judgment" nil :count 1)
    ("jduges" "judges" nil :count 1)
    ("jdugment" "judgment" nil :count 1)
    ("jnae" "Jane" nil :count 1)
    ("jsut" "just" nil :count 1)
    ("jurisdiciotn" "jurisdiction" nil :count 1)
    ("jurisdiciton" "jurisdiction" nil :count 1)
    ("jurisdictinos" "jurisdictions" nil :count 1)
    ("justicies" "justices" nil :count 1)
    ("justifiabel" "justifiable" nil :count 1)
    ("knowedlge" "knowledge" nil :count 1)
    ("lanaguages" "languages" nil :count 1)
    ("langauge" "Language" nil :count 1)
    ("langauges" "languages" nil :count 1)
    ("laso" "also" nil :count 2)
    ("legaal" "legal" nil :count 2)
    ("legilstated" "legislated" nil :count 1)
    ("liekly" "likely" nil :count 16)
    ("liekyl" "likely" nil :count 1)
    ("likeyl" "likely" nil :count 1)
    ("liquiedatoin" "liquidation" nil :count 1)
    ("littel" "little" nil :count 1)
    ("lj" "LJ" nil :count 249)
    ("lnein" "Lenin" nil :count 1)
    ("loyla" "loyal" nil :count 1)
    ("lukcily" "Luckily" nil :count 1)
    ("m3" "member" nil :count 108)
    ("m3s" "members" nil :count 552)
    ("m3s'" "members'" nil :count 11)
    ("m3sp" "membership" nil :count 1)
    ("maek" "make" nil :count 2)
    ("marhc" "March" nil :count 1)
    ("mcuh" "much" nil :count 3)
    ("measn" "means" nil :count 1)
    ("menaing" "meaning" nil :count 1)
    ("menas" "means" nil :count 3)
    ("metnioend" "mentioned" nil :count 1)
    ("metnion" "mention" nil :count 1)
    ("metnioned" "mentioned" nil :count 1)
    ("misued" "misused" nil :count 1)
    ("mkae" "make" nil :count 3)
    ("mkaing" "making" nil :count 1)
    ("moeny" "money" nil :count 1)
    ("msut" "must" nil :count 2)
    ("n0" "number" nil :count 21)
    ("nad" "and" nil :count 8)
    ("nb" "N.b." nil :count 95)
    ("necessary" "necessary" nil :count 2)
    ("ned" "end" nil :count 2)
    ("neogiation" "negotiation" nil :count 1)
    ("netitled" "entitled" nil :count 1)
    ("nkow" "know" nil :count 1)
    ("nothign" "Nothing" nil :count 1)
    ("nto" "not" nil :count 6)
    ("ntoes" "notes" nil :count 1)
    ("obgliation" "obligation" nil :count 3)
    ("obglied" "obliged" nil :count 1)
    ("obgliiation" "obligation" nil :count 1)
    ("oblgation" "obligation" nil :count 1)
    ("observaiton" "observation" nil :count 1)
    ("ocmmentary" "commentary" nil :count 1)
    ("ocmpany" "company" nil :count 1)
    ("ocnclusive" "conclusive" nil :count 1)
    ("ocnsideration" "consideration" nil :count 1)
    ("ocnsiderations" "considerations" nil :count 1)
    ("ocnsidered" "considered" nil :count 1)
    ("ocre" "core" nil :count 1)
    ("ocrporation" "corporation" nil :count 1)
    ("oculd" "could" nil :count 2)
    ("ofr" "for" nil :count 12)
    ("ohter" "other" nil :count 2)
    ("onyl" "only" nil :count 3)
    ("opne" "open" nil :count 2)
    ("orindary" "ordinary" nil :count 1)
    ("osme" "some" nil :count 2)
    ("ot" "to" nil :count 50)
    ("otehr" "other" nil :count 1)
    ("otehrwise" "otherwise" nil :count 1)
    ("otok" "took" nil :count 1)
    ("overrideent" "overridden" nil :count 1)
    ("owenr" "owner" nil :count 1)
    ("owkrs" "works" nil :count 1)
    ("owrding" "wording" nil :count 1)
    ("owrds" "words" nil :count 1)
    ("owrk" "work" nil :count 2)
    ("owrkers" "workers" nil :count 1)
    ("owuld" "would" nil :count 4)
    ("p0w" "power" nil :count 2)
    ("p3" "pension" nil :count 226)
    ("p3s" "pensions" nil :count 119)
    ("palce" "place" nil :count 5)
    ("paragarph" "paragraph" nil :count 1)
    ("particualr" "particular" nil :count 3)
    ("particualrly" "particularly" nil :count 18)
    ("particuarl" "particular" nil :count 1)
    ("particuarlly" "particularly" nil :count 2)
    ("partiuclary" "particularly" nil :count 1)
    ("partnerhsip" "partnership" nil :count 3)
    ("passaeg" "passage" nil :count 1)
    ("payuments" "payments" nil :count 1)
    ("peices" "pieces" nil :count 1)
    ("peopel" "people" nil :count 1)
    ("perahps" "Perhaps" nil :count 1)
    ("perforamnce" "performance" nil :count 1)
    ("perhasp" "perhaps" nil :count 1)
    ("piad" "paid" nil :count 1)
    ("piont" "point" nil :count 2)
    ("pionted" "pointed" nil :count 1)
    ("pmphlet" "pamphlet" nil :count 1)
    ("pnesions" "Pensions" nil :count 1)
    ("poewr" "power" nil :count 1)
    ("poistion" "position" nil :count 1)
    ("poitn" "point" nil :count 3)
    ("porper" "proper" nil :count 1)
    ("potnetially" "potentially" nil :count 1)
    ("potni" "point" nil :count 1)
    ("ppf" "PPF" nil :count 34)
    ("presencve" "presence" nil :count 1)
    ("presetned" "presented" nil :count 1)
    ("priavate" "private" nil :count 1)
    ("pricniples" "principles" nil :count 1)
    ("pricples" "principles" nil :count 1)
    ("princiapl" "principal." nil :count 1)
    ("principel" "principle" nil :count 1)
    ("prinicples" "principles" nil :count 1)
    ("printoyut" "printout" nil :count 1)
    ("problme" "problem" nil :count 2)
    ("proeprty" "property" nil :count 3)
    ("professoin" "profession." nil :count 2)
    ("proprty" "property" nil :count 1)
    ("propsect" "prospect" nil :count 1)
    ("propsoal" "proposal" nil :count 1)
    ("provdie" "provide" nil :count 1)
    ("prupose" "purpose" nil :count 7)
    ("pruposes" "purposes" nil :count 2)
    ("prvoen" "proven" nil :count 1)
    ("psecific" "specific" nil :count 1)
    ("psite" "spite" nil :count 1)
    ("puproose" "purpose" nil :count 1)
    ("puprose" "purpose" nil :count 2)
    ("puroses" "purposes" nil :count 1)
    ("purpsoe" "purpose" nil :count 1)
    ("pursuasive" "persuasive" nil :count 1)
    ("pwoer" "power" nil :count 6)
    ("pwoers" "powers" nil :count 7)
    ("quesiton" "question" nil :count 1)
    ("quesitoned" "questioned" nil :count 1)
    ("questinos" "questions" nil :count 1)
    ("questoins" "questions" nil :count 3)
    ("qv" "Q.v." nil :count 12)
    ("r3g" "Regulator" nil :count 3)
    ("r3gs" "regulations" nil :count 1)
    ("rahter" "rather" nil :count 4)
    ("rathre" "rather" nil :count 1)
    ("rbought" "brought" nil :count 1)
    ("reachign" "reaching" nil :count 1)
    ("reaonsbale" "reasonable" nil :count 2)
    ("reaosn" "reason" nil :count 2)
    ("reaosnable" "reasonable" nil :count 1)
    ("reaosnably" "reasonably" nil :count 4)
    ("reaosns" "reasons" nil :count 1)
    ("reasonabel" "reasonable" nil :count 3)
    ("receitp" "receipt" nil :count 3)
    ("reciept" "receipt" nil :count 4)
    ("recived" "received" nil :count 1)
    ("reelvant" "relevant" nil :count 2)
    ("referecne" "reference" nil :count 3)
    ("refernce" "reference" nil :count 3)
    ("refernece" "reference" nil :count 5)
    ("reformatoin" "reformation" nil :count 1)
    ("registerd" "registered" nil :count 1)
    ("regs" "regulations" nil :count 4)
    ("reivew" "review" nil :count 1)
    ("relaiton" "relation" nil :count 1)
    ("relatino" "relation" nil :count 1)
    ("relatoin" "relation" nil :count 2)
    ("releavnt" "relevant" nil :count 7)
    ("relevat" "relevant" nil :count 2)
    ("relevatn" "relevant." nil :count 13)
    ("relevnat" "relevant" nil :count 1)
    ("relevvant" "relevant" nil :count 1)
    ("reloevant" "Relevant" nil :count 1)
    ("reltaion" "relation" nil :count 2)
    ("relvance" "relevance" nil :count 1)
    ("remeined" "remained" nil :count 1)
    ("repalce" "replace" nil :count 1)
    ("repitition" "repetition" nil :count 1)
    ("rescidn" "rescind" nil :count 1)
    ("reserach" "research" nil :count 2)
    ("resolviung" "ambiguity" nil :count 1)
    ("responnd" "respond" nil :count 1)
    ("restor" "restore" nil :count 1)
    ("restroed" "restored" nil :count 1)
    ("retiremetn" "retirement" nil :count 1)
    ("retruns" "returns" nil :count 1)
    ("reuqirement" "requirement" nil :count 1)
    ("revela" "reveal" nil :count 1)
    ("ricipient" "recipient" nil :count 1)
    ("rleaiton" "relation" nil :count 5)
    ("rleation" "relation" nil :count 7)
    ("rnage" "range" nil :count 2)
    ("roder" "order" nil :count 5)
    ("rpinciple" "principle" nil :count 1)
    ("rpinciples" "principles" nil :count 1)
    ("rpoperty" "property" nil :count 1)
    ("rtelation" "relation" nil :count 1)
    ("ruel" "rule" nil :count 9)
    ("s3m" "scheme" nil :count 808)
    ("s3m's" "scheme's" nil :count 13)
    ("s3ms" "schemes" nil :count 379)
    ("saem" "same" nil :count 1)
    ("scuh" "such" nil :count 2)
    ("secrect" "secrey" nil :count 1)
    ("secrey" "secrey" nil :count 2)
    ("serachgin" "searching" nil :count 1)
    ("seriosuly" "seriously" nil :count 1)
    ("sesne" "sense" nil :count 1)
    ("sesnse" "sense" nil :count 1)
    ("settlemetn" "Settlement" nil :count 1)
    ("settlmenets" "settlements" nil :count 1)
    ("shjares" "shares" nil :count 1)
    ("shoudl" "should" nil :count 12)
    ("si" "is" nil :count 18)
    ("significnat" "significant" nil :count 2)
    ("similra" "similar" nil :count 1)
    ("simpyl" "simply" nil :count 2)
    ("skiklls" "skills" nil :count 1)
    ("slae" "sale" nil :count 1)
    ("smae" "same" nil :count 18)
    ("snese" "sense" nil :count 4)
    ("sohuld" "should" nil :count 1)
    ("somehting" "something" nil :count 1)
    ("somethign" "something" nil :count 17)
    ("soruce" "source" nil :count 1)
    ("speicficially" "specifically" nil :count 1)
    ("statsu" "status" nil :count 1)
    ("statuory" "statutory" nil :count 1)
    ("stnad" "stand" nil :count 4)
    ("stnadard" "Standard" nil :count 1)
    ("strnage" "strange" nil :count 1)
    ("stuatory" "statutory" nil :count 1)
    ("studnets" "students" nil :count 1)
    ("stutory" "statutory" nil :count 1)
    ("suadi" "Saudi" nil :count 1)
    ("subejct" "subject" nil :count 3)
    ("subsidiayr" "subsidiary" nil :count 1)
    ("suc" "Supreme Court" nil :count 16)
    ("suhc" "such" nil :count 1)
    ("suject" "subject" nil :count 1)
    ("surroundign" "surrounding" nil :count 1)
    ("sya" "say" nil :count 3)
    ("syaing" "saying" nil :count 1)
    ("t3" "trustee" nil :count 340)
    ("t3p" "Trusteeship" nil :count 2)
    ("t3s" "trustees" nil :count 1055)
    ("t3s'" "trustees'" nil :count 17)
    ("taht" "that" nil :count 94)
    ("takne" "taken" nil :count 1)
    ("takss" "tasks" nil :count 3)
    ("taskts" "tasks" nil :count 1)
    ("tath" "that" nil :count 2)
    ("technial" "technical" nil :count 1)
    ("teh" "the" nil :count 85)
    ("tehre" "there" nil :count 2)
    ("tehse" "these" nil :count 3)
    ("tehy" "they" nil :count 13)
    ("temrs" "terms" nil :count 1)
    ("tersm" "terms" nil :count 1)
    ("theferore" "Therefore" nil :count 1)
    ("themsevels" "themselves" nil :count 1)
    ("themsevles" "themselves" nil :count 2)
    ("thereofer" "therefore" nil :count 1)
    ("thereofre" "Therefore" nil :count 2)
    ("therfore" "therefore" nil :count 2)
    ("thier" "their" nil :count 14)
    ("thigns" "things" nil :count 3)
    ("this" "this" nil :count 86)
    ("thjis" "This" nil :count 1)
    ("thme" "them" nil :count 5)
    ("thna" "than" nil :count 1)
    ("thrid" "third" nil :count 2)
    ("thsee" "these" nil :count 2)
    ("thsi" "this" nil :count 15)
    ("thsoe" "those" nil :count 1)
    ("tht" "that" nil :count 4)
    ("thta" "that" nil :count 5)
    ("thye" "they" nil :count 14)
    ("ti" "it" nil :count 35)
    ("tiself" "itself" nil :count 1)
    ("tkae" "take" nil :count 7)
    ("tkaen" "taken" nil :count 1)
    ("tkaing" "taking" nil :count 2)
    ("tlak" "talk" nil :count 1)
    ("tlaks" "talks" nil :count 1)
    ("toehr" "other" nil :count 1)
    ("toher" "other" nil :count 3)
    ("tr1b" "tribunal" nil :count 9)
    ("tretaed" "treated" nil :count 4)
    ("trhoughout" "throughout" nil :count 1)
    ("trsuts" "trusts" nil :count 1)
    ("tru" "true" nil :count 1)
    ("tthere" "there" nil :count 1)
    ("turst" "trust" nil :count 6)
    ("tursts" "trusts" nil :count 1)
    ("tyhis" "this" nil :count 1)
    ("udner" "under" nil :count 1)
    ("ufndamental" "fundamental" nil :count 1)
    ("ufnds" "funds" nil :count 1)
    ("ultiamtely" "ultimately" nil :count 1)
    ("uncelar" "unclear" nil :count 1)
    ("unconcsionable" "unconscionable" nil :count 1)
    ("unconscionabel" "unconscionable" nil :count 1)
    ("undbertake" "undertake" nil :count 1)
    ("understnad" "understand" nil :count 4)
    ("understnading" "Understanding" nil :count 4)
    ("undoubteldy" "undoubtedly" nil :count 1)
    ("unilaterla" "unilateral" nil :count 1)
    ("unreasonabel" "unreasonable" nil :count 2)
    ("uphlds" "upholds" nil :count 1)
    ("useing" "using" nil :count 1)
    ("usmmation" "summation" nil :count 1)
    ("vlaid" "valid" nil :count 1)
    ("vlaue" "value" nil :count 1)
    ("voer" "over" nil :count 2)
    ("voerall" "overall" nil :count 1)
    ("voercome" "overcome" nil :count 2)
    ("voerly" "overly" nil :count 2)
    ("waht" "what" nil :count 4)
    ("wehre" "where" nil :count 1)
    ("whcih" "which" nil :count 7)
    ("whihc" "which" nil :count 3)
    ("whioch" "which" nil :count 1)
    ("whne" "when" nil :count 1)
    ("wich" "which" nil :count 1)
    ("wiegh" "weigh" nil :count 1)
    ("wihch" "which" nil :count 3)
    ("wihci" "which" nil :count 1)
    ("wiht" "with" nil :count 3)
    ("wihtin" "within" nil :count 1)
    ("williasm" "Williams" nil :count 1)
    ("windign" "winding" nil :count 1)
    ("wlecome" "welcome" nil :count 1)
    ("wnat" "want" nil :count 3)
    ("wnated" "wanted" nil :count 1)
    ("woed" "owed" nil :count 1)
    ("workign" "working" nil :count 1)
    ("workiong" "working" nil :count 1)
    ("woudl" "would" nil :count 12)
    ("wrod" "word" nil :count 1)
    ("wrok" "work" nil :count 2)
    ("wrt" "With regards to" nil :count 5)
    ("wsa" "was" nil :count 4)
    ("wt" "with" nil :count 1)
    ("wtih" "with" nil :count 2)
    ("wtihin" "within" nil :count 1)
    ("yoruself" "yourself" nil :count 1)
    ("yuo" "you" nil :count 2)
   ))

